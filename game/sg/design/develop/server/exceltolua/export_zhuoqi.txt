
--导出坐骑配置表

----------------------------------------------------------------------------------------
function sz_T2S(_t)  
    local szRet = "{"  
    function doT2S(_i, _v)  
        if "number" == type(_i) then  
            szRet = szRet .. "[" .. _i .. "] = "  
            if "number" == type(_v) then  
                szRet = szRet .. _v .. ","  
            elseif "string" == type(_v) then  
                szRet = szRet .. '"' .. _v .. '"' .. ","  
            elseif "table" == type(_v) then  
                szRet = szRet .. sz_T2S(_v) .. ","  
            else  
                szRet = szRet .. "nil,"  
            end  
        elseif "string" == type(_i) then  
            szRet = szRet  .. _i .. '= '  
            if "number" == type(_v) then  
                szRet = szRet .. _v .. ","  
            elseif "string" == type(_v) then  
                szRet = szRet .. '"' .. _v .. '"' .. ","  
            elseif "table" == type(_v) then  
                szRet = szRet .. sz_T2S(_v) .. ","  
            else  
                szRet = szRet .. "nil,"  
            end  
        end  
    end  
    table.foreach(_t, doT2S)  
    szRet = szRet .. "}\n"  
    return szRet  
end  


local function readCell( index,starti,endi,objexcel,str )
 	local result = {}
 	local ind = 1
	for i=starti,endi do
		
		result[ind] = (objexcel:ReadCellAsString(i, index))
		if str then	
			result[ind] = tostring(result[ind]) 
		else 
			result[ind] = tonumber(result[ind]) 
		end
		ind = ind + 1
	end
	return result
end

local function readRow( index,starti,endi,objexcel,str )
 	local result = {}
 	local ind = 1
	for i=starti,endi do
		result[ind] = (objexcel:ReadCellAsString(index, i))
		if str then	
			result[ind] = tostring(result[ind]) 
		else 
			result[ind] = tonumber(result[ind]) 
		end
		ind = ind + 1
	end
	return result
end



local function readPutongMounts( objexcel )
	local obj = objexcel:LoadSheetByIndex(1)
	if not obj then
		print("LoadSheetByIndex失败!")
		objexcel:Close()
		objexcel:Quit_App()
		return
	end

	local mCount = objexcel:GetCurrentSheetRowCount()

	local concent = {}
	local index = 1

	local stape = 11							
					
	--每阶坐骑有11行数据
	for i=2,mCount,stape do
		local tmp = {}
		local jinjie = i+stape-1
		tmp.modelId = tonumber(objexcel:ReadCellAsString(i, 1))
		tmp.name = objexcel:ReadCellAsString(i, 2)
		tmp.moveSpeed = tonumber(objexcel:ReadCellAsString(i, 13))
		tmp.needExp = tonumber(objexcel:ReadCellAsString(jinjie, 12))
		tmp.stageItem = tonumber(objexcel:ReadCellAsString(jinjie, 9))
		tmp.stageItemCount = tonumber(objexcel:ReadCellAsString(jinjie, 10))
		tmp.stageMoney = tonumber(objexcel:ReadCellAsString(jinjie, 26))

		tmp.stageAddExp = tonumber(objexcel:ReadCellAsString(jinjie, 11))
		local stageRate = readCell( 21,i,jinjie,objexcel )
		tmp.stageRate = {}
		for i=1,#stageRate do
			if stageRate[i] == 0 then
				break
			end
			tmp.stageRate[i] = stageRate[i]
		end
		local stageRateValue = readCell( 22,i,jinjie,objexcel )
		tmp.stageRateValue = {}
		for i=1,#stageRateValue do
			if stageRateValue[i] == 0 then
				break
			end
			tmp.stageRateValue[i] = stageRateValue[i]
		end
		local levelRate = readCell( 23,i,jinjie,objexcel )
		tmp.levelRate = {}
		for i=1,#levelRate do
			if levelRate[i] == 0 then
				break
			end
			tmp.levelRate[i] = levelRate[i]
		end
		local rateValue = readCell( 24,i,jinjie,objexcel )
		tmp.rateValue = {}
		for i=1,#rateValue do
			if rateValue[i] == 0 then
				break
			end
			tmp.rateValue[i] = rateValue[i]
		end

		tmp.levelExp = readCell( 8,i,i+10,objexcel )
		tmp.levelItem = readCell( 5,i,i+10,objexcel )
		tmp.itemCount = readCell( 6,i,i+10,objexcel )
		tmp.levelMoney = readCell( 25,i,i+10,objexcel )
		tmp.addExp = readCell( 7,i,i+10,objexcel )

		tmp.broadCast = tonumber(objexcel:ReadCellAsString(i, 27)) or 0

		tmp.base = {}
		for j=1,11 do
			tmp.base[j] = {}
			tmp.base[j] = readRow( (i+j-1),14,20,objexcel )
		end

		concent[index] = tmp
		index = index + 1
	end

	local str = ""
	str = sz_T2S(concent)
	str = "stages ="..str..","

	objexcel:WriteFile("data/config/mounts/zqPutongConfig.txt", str)
end

local function readTeshuMounts( objexcel )
	local obj = objexcel:LoadSheetByIndex(2)
	if not obj then
		print("LoadSheetByIndex失败!")
		objexcel:Close()
		objexcel:Quit_App()
		return
	end

	local mCount = objexcel:GetCurrentSheetRowCount()

	local concent = {}
	local index = 1		
	--每阶坐骑有11行数据
	for i=2,mCount do
		local tmp = {}
		tmp.modelId = tonumber(objexcel:ReadCellAsString(i, 1))
		tmp.name = objexcel:ReadCellAsString(i, 2)
		tmp.formway = objexcel:ReadCellAsString(i, 3) or ''
		tmp.moveSpeed = tonumber(objexcel:ReadCellAsString(i, 4))
		tmp.openItemId = tonumber(objexcel:ReadCellAsString(i, 9))

		tmp.base = {}
		for j=5,8 do
			tmp.base[j-4] = tonumber(objexcel:ReadCellAsString(i, j))
		end

		concent[index] = tmp
		index = index + 1
	end

	local str = ""
	str = sz_T2S(concent)
	str = "stagesOther ="..str..","

	objexcel:WriteFile("data/config/mounts/zqTeShuConfig.txt", str)
end

local function readSkill( objexcel )
	local obj = objexcel:LoadSheetByIndex(3)
	if not obj then
		print("LoadSheetByIndex失败!")
		objexcel:Close()
		objexcel:Quit_App()
		return
	end

	local mCount = objexcel:GetCurrentSheetRowCount()

	local concent = {}
	local index = 1		

	concent["skillOpen"] = readCell(6,2,11,objexcel)
	--
	local stape = 5
	concent["jihuoMoney"] = tonumber(objexcel:ReadCellAsString(2, 3))
	concent["useItem"] = {}
	concent["useItemCount"] = {}
	concent["levelMoney"] = {}
	concent["levelUseItem"] = {}
	concent["levelItemCount"] = {}
	concent["addExp"] = {}
	concent["levelExp"] = {}
	concent["skillId"] = {}
	concent["addAttribute"] = {}
	for i=2,mCount,stape do
		concent["useItem"][index] = tonumber(objexcel:ReadCellAsString(i, 4))
		concent["useItemCount"][index] = tonumber(objexcel:ReadCellAsString(i,5))
		concent["levelMoney"][index] = tonumber(objexcel:ReadCellAsString(i, 7))
		concent["levelUseItem"][index] = tonumber(objexcel:ReadCellAsString(i, 8))
		concent["levelItemCount"][index] = tonumber(objexcel:ReadCellAsString(i, 9))
		concent["addExp"][index] = tonumber(objexcel:ReadCellAsString(i, 10))
		concent["skillId"][index] = tonumber(objexcel:ReadCellAsString(i, 1))
		concent["addAttribute"][index] = tonumber(objexcel:ReadCellAsString(i, 12)) or 0
		
		concent["levelExp"][index] = {}
		concent["levelExp"][index] = readCell(11,i,i+3,objexcel)

		index = index +1
	end

	local str = ""
	str = sz_T2S(concent)
	str = "SkillConfig ="..str..","

	objexcel:WriteFile("data/config/mounts/zqSkillConfig.txt", str)
end

function ReadMountsConfig()
	local objexcel = CExcelReader:new()
	if not objexcel then
		print("objexcel is null")
		return
	end

	objexcel:Init_App()
	objexcel:OpenRead()

	readPutongMounts(objexcel)
	readTeshuMounts(objexcel)
	readSkill(objexcel)

	objexcel:Close()
	objexcel:Quit_App()
	objexcel:delete()
end
