--限量购买活动
--#include "data\functions\systems\timereward\activityconf.txt" once

LimitBuyActivity = {}
LimitBuyActivity.activityId = {38, 98, 99}

function LimitBuyActivity.getActorVar(actor, id)
	if not actor or not id then return end
	local var = LActor.getStaticVar(actor)
	if not var then return end

	if not var.limitBuyActivity then var.limitBuyActivity = {} end
	if not var.limitBuyActivity[id] then var.limitBuyActivity[id] = {} end

	local state,starttime,endtime = ONLINEREWARD.GetActivityState(id)

	if not var.limitBuyActivity[id].time or var.limitBuyActivity[id].time ~= starttime then
		var.limitBuyActivity[id] = {}
		var.limitBuyActivity[id].time = starttime
	end

	return var.limitBuyActivity[id]
end

function LimitBuyActivity.getSystemVar(id)
	local sysVar = System.getStaticVar()
	if not sysVar then return end

	if not sysVar.limitBuyActivity then sysVar.limitBuyActivity = {} end
	if not sysVar.limitBuyActivity[id] then sysVar.limitBuyActivity[id] = {} end

	local state,starttime,endtime = ONLINEREWARD.GetActivityState(id)
	if not sysVar.limitBuyActivity[id].time or sysVar.limitBuyActivity[id].time ~= starttime then
		sysVar.limitBuyActivity[id] = {}
		sysVar.limitBuyActivity[id].time = starttime
	end

	return sysVar.limitBuyActivity[id]
end

function LimitBuyActivity.sendInfo(actor, id)
	if not actor then return end

	if not activityConf[id] then
		print("error LimitBuyActivity buyItem id        "..id)
		print(type(id))
		return
	end

	local config
	for _, activityId in pairs(LimitBuyActivity.activityId) do
		if activityConf[id].activities[activityId] then
			config = activityConf[id].activities[activityId]
			break
		end
	end
	if not config then return end

	local var = LimitBuyActivity.getActorVar(actor, id)
	if not var then return end
	if not var.hasBuyItem then var.hasBuyItem = 0 end 	--玩家是否已购买物品

	local sysVar = LimitBuyActivity.getSystemVar(id)
	if not sysVar then return end
	if not sysVar.hasBuyItem then
		sysVar.hasBuyItem = {}		--服务器总购买个数
	end

	local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 148)
	if not pack then return end

	DataPack.writeInt(pack, id)
	DataPack.writeByte(pack, #config.items)
	for itemIdx, itemConfig in ipairs(config.items) do
		DataPack.writeInt(pack, itemConfig.itemid)
		DataPack.writeByte(pack, System.getIntBit(var.hasBuyItem, itemIdx))
		DataPack.writeInt(pack, itemConfig.maxCount - (sysVar.hasBuyItem[itemIdx] or 0))
	end

	DataPack.flush(pack)
end

--购买物品
function LimitBuyActivity.buyItem(actor, id, itemid)
	if not activityConf[id] then
		print("error LimitBuyActivity buyItem id        "..id)
		print(type(id))
		return
	end

	local config
	for _, activityId in pairs(LimitBuyActivity.activityId) do
		if activityConf[id].activities[activityId] then
			config = activityConf[id].activities[activityId]
			break
		end
	end
	if not config then return end

	local itemConfig
	local itemIdx
	for tmp, conf in pairs(config.items) do
		if conf.itemid == itemid then
			itemConfig = conf
			itemIdx = tmp
			break
		end
	end
	if not itemConfig or not itemIdx then return end

	local var = LimitBuyActivity.getActorVar(actor, id)
	if not var then return end

	if LActor.getMoneyCount(actor, itemConfig.moneyType) < itemConfig.price then
		LActor.SendGeneralTips(actor, 1, itemConfig.moneyType, itemConfig.price)
		return
	end

	if not var.hasBuyItem then var.hasBuyItem = 0 end
	if System.getBitValue(var.hasBuyItem, itemIdx) == true then
		LActor.sendTipmsg(actor, Lang.ScriptTips.limit002, ttMessage)
		return
	end

	local sysVar = LimitBuyActivity.getSystemVar(id)
	if not sysVar then return end
	if not sysVar.hasBuyItem then
		sysVar.hasBuyItem = {}		--服务器总购买个数
	end
	if not sysVar.hasBuyItem[itemIdx] then sysVar.hasBuyItem[itemIdx]  = 0 end

	if sysVar.hasBuyItem[itemIdx] >= itemConfig.maxCount then
		LActor.sendTipmsg(actor, Lang.ScriptTips.limit003, ttMessage)
		return
	end

	if Item.getBagEmptyGridCount(actor) < 1 then
		LActor.SendGeneralTips(actor, 7, 0, 0)
		return
	end

	var.hasBuyItem = System.setIntBit(var.hasBuyItem, itemIdx, true)
	sysVar.hasBuyItem[itemIdx] = sysVar.hasBuyItem[itemIdx] + 1

	LActor.changeMoney(actor, itemConfig.moneyType, -itemConfig.price, 1, true, "limitBuyActivity")

	LActor.addItem(actor, itemConfig.itemid, 0, 0, 1, 0, "limitBuyActivity")

	LimitBuyActivity.sendInfo(actor, id)

	System.logCounter(LActor.getActorId(actor), LActor.getAccountName(actor), tostring(LActor.getLevel(actor)), "limitBuyActivity", tonumber(itemConfig.itemid), "", "", "", LActor.getName(actor))
end

function LimitBuyActivity.onLogin(actor)
	for _, conf in pairs(ActivityControl) do
		local state,starttime,endtime = ONLINEREWARD.GetActivityState(conf.id)
		if state ~= 0 then
			if activityConf[conf.id] then
				for _, activityId in pairs(LimitBuyActivity.activityId) do
					if activityConf[conf.id].activities[activityId] then
						LimitBuyActivity.sendInfo(actor, conf.id)
						break
					end
				end
			end
		end
	end
end

EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogin, LimitBuyActivity.onLogin)

function LimitBuyActivity.check(actor, args)
	local tmp1 = tonumber(args[1])
	if tmp1 == 1 then
		LimitBuyActivity.sendInfo(actor, 1)
	elseif tmp1 == 2 then
		local tmp2 = tonumber(args[2])
		LimitBuyActivity.buyItem(actor, 1, tmp2)
	end
end

GmEventFuncList.register( "limit", LimitBuyActivity.check, 1)
