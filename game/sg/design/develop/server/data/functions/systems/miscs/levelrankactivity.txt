--活动 等级排行争霸
--#include "data\config\misc\levelrankactivityconfig.txt" once

LevelRankActivity = {}

function LevelRankActivity.getSystemVar()
	local sysVar = System.getStaticVar()
	if not sysVar then return end

	if not sysVar.levelRankActivity then sysVar.levelRankActivity = {} end

	return sysVar.levelRankActivity
end

-- 发送前count名信息
function LevelRankActivity.sendInfo(actor, packet)
	if not actor or not packet then return end

	local count = DataPack.readInt(packet)

	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar or not sysVar.isInActivity or not sysVar.actorRank or not sysVar.actorCount then return end

	if sysVar.actorCount == 0 then
		return
	elseif sysVar.actorCount < count then
		count = sysVar.actorCount
	end

	local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 157)
	if pack == nil then return end

	DataPack.writeByte(pack, count)
	for i = 1, count do
		if sysVar.actorRank[i] then
			DataPack.writeInt(pack, i)
			DataPack.writeInt(pack, sysVar.actorRank[i].actorId)
			DataPack.writeString(pack, sysVar.actorRank[i].name)
			DataPack.writeInt(pack, sysVar.actorRank[i].level)
			DataPack.writeByte(pack, sysVar.actorRank[i].job)
			DataPack.writeByte(pack, sysVar.actorRank[i].sex)
			DataPack.writeInt(pack, sysVar.actorRank[i].weapon or 0)
		else
			print("levelRankActivity error data,      sendInfo       "..i.."   "..sysVar.actorCount)
			return
		end
	end

	DataPack.flush(pack)
end

--活动是否开启了
function LevelRankActivity.sendIsOpen(actor)
	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar then return end

	if actor then
		local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 158)
		if not pack then return end

		DataPack.writeByte(pack, sysVar.isInActivity or 0)

		DataPack.flush(pack)
	else
		local pack = LDataPack.allocPacket()
		if pack == nil then return end

		LDataPack.writeByte(pack, BaseTypes.SystemId.timeRewardSystem)
		LDataPack.writeByte(pack, 158)
		LDataPack.writeByte(pack, sysVar.isInActivity or 0)

		System.broadcastData(pack)
	end
end

--活动处理
function LevelRankActivityTimer(npc, args)
	local tmp
	if npc and type(npc) ~= "userdata"  then
		tmp = tonumber(npc)
	else
		if not args then return end
		tmp = tonumber(args)
	end

	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar then return end

	if tmp == 0 then
		--活动期间每天结算
		if not sysVar.isInActivity then return end
		System.saveActorAndRefreshRank()
		LActor.regScriptCallback(System.getGlobalNpc(), nil, 1*1000, 0, 1, "LevelRankActivityJiesuanRank")
	elseif tmp == 1 then
		--凌晨发奖励
		if not sysVar.isInActivity then return end
		LevelRankActivity.sendAwards()
	elseif tmp == 2 then
		--活动开启
		if sysVar.isInActivity then
			print("error has open LevelRankActivity")
			return
		end
		sysVar.isInActivity = 1

		LevelRankActivity.sendIsOpen()
	elseif tmp == 3 then
		--活动结束了
		if not sysVar.isInActivity then
			print("error has close LevelRankActivity")
			return
		end
		sysVar.isInActivity = nil
		LevelRankActivity.sendIsOpen()
		if sysVar.actorRank and sysVar.actorCount then
			for i = 1, LevelRankConfig.finalActorCount do
				if sysVar.actorRank[i] then
					System.logCounter(0, "", "", "levelrank", tostring(i), tostring(sysVar.actorRank[i].actorId), tostring(sysVar.actorRank[i].name), tostring(sysVar.actorRank[i].level))
					for _, conf in ipairs(LevelRankConfig.finalAwards) do
						if i >= conf.rank[1] and i <= conf.rank[2] then
							local awards = {}
							for _, tmp in pairs(conf.item) do
								table.insert(awards, {itemType = tmp.type, itemId = tmp.id, itemNum = tmp.count})
							end
							local context = string.format(Lang.ScriptTips.levelrank011, i)
							CommAwardFunc.giveToActorOffLine(sysVar.actorRank[i].actorId, awards, Lang.ScriptTips.levelrank012, context)
						end
					end
				end
			end
		end
	end
end

--结算，记录当前排行
function LevelRankActivityJiesuanRank()
	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar or not sysVar.isInActivity  then return end

	sysVar.actorRank = {}
	sysVar.actorCount = 0

	for i = 1, #LevelRankConfig.everyDayAwards do
		local actorInfo = Ranking.getActorInfo(2, i)
		if actorInfo then
			if actorInfo.actorid == 0 then break end

			sysVar.actorRank[i] = {}
			sysVar.actorRank[i].actorId = actorInfo.actorid
			sysVar.actorRank[i].name = actorInfo.name
			sysVar.actorRank[i].level = Ranking.getLevelFromDbRank(2, i-1)
			sysVar.actorRank[i].job = actorInfo.job
			sysVar.actorRank[i].sex = actorInfo.sex
			sysVar.actorRank[i].vip = actorInfo.vip
			sysVar.actorRank[i].weapon = actorInfo.weapon
			sysVar.actorRank[i].guildname = actorInfo.guildname
			sysVar.actorCount = sysVar.actorCount + 1
		else
			break
		end
	end
end

--发奖励
function LevelRankActivity.sendAwards()
	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar or not sysVar.actorRank or not sysVar.actorCount then return end

	for i = 1, sysVar.actorCount do
		if sysVar.actorRank[i] and LevelRankConfig.everyDayAwards[i] then
			local award = LevelRankConfig.everyDayAwards[i]
			local context = string.format(Lang.ScriptTips.levelrank003, i)
			if not award[2] then
				System.sendGmMailOffLine(sysVar.actorRank[i].actorId, context, award[1].type, award[1].id, award[1].count, award[1].bind, Lang.ScriptTips.levelrank004)
			elseif not award[3] then
				System.sendGmMailOffLine(sysVar.actorRank[i].actorId, context, award[1].type, award[1].id, award[1].count, award[1].bind, Lang.ScriptTips.levelrank004, award[2].type, award[2].id, award[2].count, award[2].bind)
			else
				System.sendGmMailOffLine(sysVar.actorRank[i].actorId, context, award[1].type, award[1].id, award[1].count, award[1].bind, Lang.ScriptTips.levelrank004,
					award[2].type, award[2].id, award[2].count, award[2].bind, award[3].type, award[3].id, award[3].count, award[3].bind)
			end
		end
	end
end

function LevelRankActivity.setActivityTime(startTime, endTime)
	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar then return end

	print("setActivityTime levelRankActivity          "..startTime.."        "..endTime)

	local npc = System.getGlobalNpc()
	if sysVar.startTimerId then
		LActor.unregScriptCallback(npc, sysVar.startTimerId)
	end
	if sysVar.endTimerId then
		LActor.unregScriptCallback(npc, sysVar.endTimerId)
	end

	local now = System.getCurrMiniTime()
	if now > endTime then
		--过期
		print("error LevelRankActivity time guoqi")
		LevelRankActivityTimer(nil, 3)
		return
	elseif now < startTime then
		--未来执行
		sysVar.startTimerId = LActor.regScriptCallback(npc, nil, (startTime-now)*1000, 0, 1, "LevelRankActivityTimer", 2)
		sysVar.endTimerId = LActor.regScriptCallback(npc, nil, (endTime-now)*1000, 0, 1, "LevelRankActivityTimer", 3)
	else
		LevelRankActivityTimer(nil, 2)
		sysVar.startTimerId = 0
		sysVar.endTimerId = LActor.regScriptCallback(npc, nil, (endTime-now)*1000, 0, 1, "LevelRankActivityTimer", 3)
	end
end

function LevelRankActivity.onServerStart()
	local sysVar = LevelRankActivity.getSystemVar()
	if not sysVar then return end

	local startTime = System.getOpenServerStartDateTime()
	local endTime = startTime + 24*3600 * LevelRankConfig.openDay
	LevelRankActivity.setActivityTime(startTime, endTime)
end

GameStartEventList.registerEvent(LevelRankActivity.onServerStart)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogin, LevelRankActivity.sendIsOpen)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeLevel, LevelRankActivity.onLevelUp)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeAddEquiment, LevelRankActivity.takeonEquip)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeJoinGuild, LevelRankActivity.joinLeaveGuild)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeLeftGuild, LevelRankActivity.joinLeaveGuild)

function LevelRankActivity.gmFunction(actor, args)
	local gmid = tonumber(args[1])
	if gmid == 0 or gmid == 1 or gmid == 2 or gmid == 3 then
		LevelRankActivityTimer(nil, gmid)
	end
end

GmEventFuncList.register( "levelrank", LevelRankActivity.gmFunction,1)
