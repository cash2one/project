--通用的排行榜活动
--#include "data\config\misc\rankactivityconfig.txt" once
--#include "data\functions\systems\miscs\flowerrankactivity.txt" once

RankActivity = {}

function RankActivity.getSystemVar(rankId)
	local sysVar = System.getStaticVar()
	if not sysVar then return end

	if not sysVar.rankActivity then sysVar.rankActivity = {} end
	if not sysVar.rankActivity[rankId] then sysVar.rankActivity[rankId] = {} end

	return sysVar.rankActivity[rankId]
end

function RankActivity.getActorVar(actor)
	if not actor then return end

	local var = LActor.getStaticVar(actor)
	if not var then return end

	if not var.rankActivity then var. rankActivity = {} end

	return var.rankActivity
end

-- 发送前count名信息
function RankActivity.sendInfo(actor, packet)
	if not actor or not packet then return end

	local rankId = DataPack.readByte(packet)
	local count = DataPack.readByte(packet)

	local sysVar = RankActivity.getSystemVar(rankId)
	if not sysVar or not sysVar.isInActivity or not sysVar.actorRank or not sysVar.actorCount then return end

	if sysVar.actorCount == 0 then
		return
	elseif sysVar.actorCount < count then
		count = sysVar.actorCount
	end

	local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 159)
	if pack == nil then return end

	DataPack.writeByte(pack, rankId)
	DataPack.writeByte(pack, count)
	for i = 1, count do
		if sysVar.actorRank[i] then
			DataPack.writeInt(pack, i)
			DataPack.writeInt(pack, sysVar.actorRank[i].actorId)
			DataPack.writeString(pack, sysVar.actorRank[i].name)
			DataPack.writeInt(pack, sysVar.actorRank[i].level or 0)
			DataPack.writeByte(pack, sysVar.actorRank[i].job or 1)
			DataPack.writeByte(pack, sysVar.actorRank[i].sex or 0)
			DataPack.writeInt(pack, sysVar.actorRank[i].weapon or 0)
		else
			print("RankActivity error data,      sendInfo       "..rankId.."  "..i.."   "..sysVar.actorCount)
			return
		end
	end

	DataPack.flush(pack)
end

--活动是否开启了
function RankActivity.broadIsOpen(rankId, open)
	local pack = LDataPack.allocPacket()
	if pack == nil then return end

	LDataPack.writeByte(pack, BaseTypes.SystemId.timeRewardSystem)
	LDataPack.writeByte(pack, 160)
	LDataPack.writeByte(pack, rankId)
	LDataPack.writeByte(pack, open)

	System.broadcastData(pack)
end

function RankActivity.sendActorInfo(actor, rankId)
	local info
	if rankId == 13 then
		local var = LActor.getStaticVar(actor)
		info = var.flowers or 0
	elseif rankId == 14 then
		local var = LActor.getStaticVar(actor)
		info = var.Flowers_count or 0
	end
	if not info then return end

	local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 166)
	if pack == nil then return end

	DataPack.writeByte(pack, rankId)
	DataPack.writeInt(pack, info)
	
	DataPack.flush(pack)
end

--活动处理
function RankActivityTimer(npc, arg1, arg2)
	local tmp
	local rankId
	if npc and arg1 and type(npc) ~= "userdata"  then
		tmp = tonumber(npc)
		rankId = tonumber(arg1)
	else
		if not arg1 or not arg2 then return end
		tmp = tonumber(arg1)
		rankId = tonumber(arg2)
	end

	local sysVar = RankActivity.getSystemVar(rankId)
	if not sysVar then return end

	if tmp == 0 then
		--活动期间每天结算
		if not sysVar.isInActivity then return end
		if rankId ~= 13 and rankId ~= 14 then
			System.saveActorAndRefreshRank()
			LActor.regScriptCallback(System.getGlobalNpc(), nil, 1*1000, 0, 1, "RankActivityJiesuanRank", rankId)
		else
			RankActivityJiesuanRank(nil, 13)
		end
	elseif tmp == 1 then
		--凌晨发奖励
		if not sysVar.isInActivity then return end
		RankActivity.sendAwards(rankId)
	elseif tmp == 2 then
		--活动开启
		if sysVar.isInActivity then
			print("error has open RankActivity")
			return
		end
		sysVar.isInActivity = 1

		RankActivity.broadIsOpen(rankId, 1)
	elseif tmp == 3 then
		--活动结束了
		if not sysVar.isInActivity then
			print("error has close RankActivity")
			return
		end

		sysVar.isInActivity = nil
		RankActivity.broadIsOpen(rankId, 0)
		if sysVar.actorRank and sysVar.actorCount and RankActivityConfig[rankId].finalActorCount and RankActivityConfig[rankId].finalAwards then
			for i = 1, RankActivityConfig[rankId].finalActorCount do
				if sysVar.actorRank[i] then
					System.logCounter(0, "", "", "rankActivity", tostring(1), tostring(i), tostring(sysVar.actorRank[i].actorId), tostring(sysVar.actorRank[i].name), tostring(sysVar.actorRank[i].level))

					if RankActivityConfig[rankId].finalOnlyOne and i <= RankActivityConfig[rankId].finalOnlyOne then
						local actor = LActor.getActorById(sysVar.actorRank[i].actorId)
						if actor then
							RankActivity.dialogChooseAward(actor, rankId)
						end
					else
						--不需要多选一的，直接发邮件奖励
						for _, conf in ipairs(RankActivityConfig[rankId].finalAwards) do
							if i >= conf.rank[1] and i <= conf.rank[2] then
								local awards = {}
								for _, tmp in pairs(conf.item) do
									table.insert(awards, {itemType = tmp.type, itemId = tmp.id, itemNum = tmp.count})
								end
								local context = string.format(RankActivityConfig[rankId].finalContext, i)
								CommAwardFunc.giveToActorOffLine(sysVar.actorRank[i].actorId, awards, RankActivityConfig[rankId].finalTitle, context)							
								break
							end
						end
					end
				else
					break
				end
			end
		end
	end
end

--结算，记录当前排行
function RankActivityJiesuanRank(entity, rankId)
	rankId = tonumber(rankId)

	if rankId ~= 13 and rankId ~= 14 then
		local sysVar = RankActivity.getSystemVar(rankId)
		if not sysVar or not sysVar.isInActivity  then return end

		sysVar.actorRank = {}
		sysVar.actorCount = 0

		for i = 1, RankActivityConfig[rankId].everyDayActorCount do
			local actorInfo = Ranking.getActorInfo(rankId, i)
			if actorInfo then
				if actorInfo.actorid == 0 then break end

				sysVar.actorRank[i] = {}
				sysVar.actorRank[i].actorId = actorInfo.actorid
				sysVar.actorRank[i].name = actorInfo.name
				sysVar.actorRank[i].level = Ranking.getLevelFromDbRank(2, i-1)
				sysVar.actorRank[i].job = actorInfo.job
				sysVar.actorRank[i].sex = actorInfo.sex
				sysVar.actorRank[i].vip = actorInfo.vip
				sysVar.actorRank[i].weapon = actorInfo.weapon
				sysVar.actorRank[i].guildname = actorInfo.guildname
				sysVar.actorCount = sysVar.actorCount + 1
			else
				break
			end
		end
	else
		--送花，收花的，另外处理
		local songhuaTable, shouhuaTable = FlowerRankActivity.getRankInfo()
		--送花
		local sysVar = RankActivity.getSystemVar(14)
		if not sysVar or not sysVar.isInActivity then return end

		sysVar.actorRank = {}
		sysVar.actorCount = 0

		for i, actorInfo in ipairs(songhuaTable) do
			sysVar.actorRank[i] = {}
			sysVar.actorRank[i].actorId = actorInfo.actorid
			sysVar.actorRank[i].name = actorInfo.name
			sysVar.actorRank[i].job = actorInfo.job
		end
		sysVar.actorCount = #songhuaTable

		--收花
		local sysVar = RankActivity.getSystemVar(13)
		if not sysVar or not sysVar.isInActivity  then return end

		sysVar.actorRank = {}
		sysVar.actorCount = 0

		for i, actorInfo in ipairs(shouhuaTable) do
			sysVar.actorRank[i] = {}
			sysVar.actorRank[i].actorId = actorInfo.actorid
			sysVar.actorRank[i].name = actorInfo.name
			sysVar.actorRank[i].job = actorInfo.job
		end
		sysVar.actorCount = #shouhuaTable

		FlowerRankActivity.save()
	end
end

--最终奖励 需要多选一的，弹框选择
function RankActivity.dialogChooseAward(actor, rankId)
	local var = RankActivity.getActorVar(actor)
	if not var then return end
	if var.hasGetAwards then return end

	local sysVar = System.getStaticVar()
	if not sysVar or not sysVar.rankActivity or not sysVar.rankActivity[rankId] then return end
	if sysVar.rankActivity[rankId].isInActivity then return end

	local count = 0
	local rankIds = {13, 14}
	for _, idx in pairs(rankIds) do
		local sysVar = RankActivity.getSystemVar(idx)
		if not sysVar or not sysVar.actorRank or not sysVar.actorCount then return end

		for i = 1, RankActivityConfig[idx].finalOnlyOne do
			if sysVar.actorRank[i] and sysVar.actorRank[i].actorId == LActor.getActorId(actor) then
				count = count + 1
				break
			end
		end
	end
	if count == 0 then return end
	if rankId == 14 and count == 2 then return end 	--如果进了2个排行榜的，只需要弹一次就可以了

	local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 164)
	if not pack then return end

	DataPack.writeByte(pack, rankId)
	DataPack.writeInt(pack, 1)
	DataPack.writeByte(pack, count)

	DataPack.flush(pack)
end

--选择最终奖励
function RankActivity.chooseAward(actor, rankId, itemId)
	local var = RankActivity.getActorVar(actor)
	if not var then return end
	if var.hasGetAwards then return end

	local actorid = LActor.getActorId(actor)
	local itemConfig
	local count = 0
	local rankIds = {13, 14}
	for _, idx in pairs(rankIds) do
		local sysVar = RankActivity.getSystemVar(idx)
		if not sysVar or not sysVar.actorRank or not sysVar.actorCount then return end

		if sysVar.isInActivity then return end

		for i = 1, RankActivityConfig[idx].finalOnlyOne do
			if sysVar.actorRank[i] and sysVar.actorRank[i].actorId == actorid then
				for _, conf in ipairs(RankActivityConfig[idx].finalAwards) do
					if i >= conf.rank[1] and i <= conf.rank[2] then
						itemConfig = conf.item
						count = count + 1
						break
					end
				end
			end
		end
	end
	if not itemConfig then return end

	if count == #itemConfig then
		var.hasGetAwards = 1
		if Item.getBagEmptyGridCount(actor) >= 2 then
			for _, item in pairs(itemConfig) do
				LActor.addItem(actor, item.id, 0, 0, 1, 1, "rankActivity "..rankId)
			end
		else
			System.sendGmMailOffLine(actorid, Lang.ScriptTips.qixiSonghua001, 1, itemConfig[1].id, 1, 0, Lang.ScriptTips.qixiSonghua002,
				1, itemConfig[2].id, 1, 0)
		end
	elseif count == 1 then
		for _, item in pairs(itemConfig) do
			if item.id == itemId then
				var.hasGetAwards = 1
				if Item.getBagEmptyGridCount(actor) >= 1 then
					LActor.addItem(actor, itemId, 0, 0, item.count, 1, "rankActivity "..rankId)
				else
					System.sendGmMailOffLine(actorid, Lang.ScriptTips.qixiSonghua001, 1, itemId, item.count, 0, Lang.ScriptTips.qixiSonghua002)
				end
				break
			end
		end
	else
		return
	end
end

--发奖励
function RankActivity.sendAwards(rankId)
	if not RankActivityConfig[rankId] then return end

	local sysVar = RankActivity.getSystemVar(rankId)
	if not sysVar or not sysVar.actorRank or not sysVar.actorCount then return end

	for i = 1, sysVar.actorCount do
		if sysVar.actorRank[i] then
			for _, conf in ipairs(RankActivityConfig[rankId].everyDayAwards) do
				if i >= conf.rank[1] and i <= conf.rank[2] then
					local award = conf.item
					local context = string.format(RankActivityConfig[rankId].context, i)
					if not award[3] then
						System.sendGmMailOffLine(sysVar.actorRank[i].actorId, context, award[1].type, award[1].id, award[1].count, award[1].bind, RankActivityConfig[rankId].title,
							award[2].type, award[2].id, award[2].count, award[2].bind)
					else
						System.sendGmMailOffLine(sysVar.actorRank[i].actorId, context, award[1].type, award[1].id, award[1].count, award[1].bind, RankActivityConfig[rankId].title,
							award[2].type, award[2].id, award[2].count, award[2].bind,
							award[3].type, award[3].id, award[3].count, award[3].bind)
					end

					break
				end
			end
		end
	end
end

function RankActivity.setActivityTime(rankId, startMiniTime, endMiniTime)
	local sysVar = RankActivity.getSystemVar(rankId)
	if not sysVar then return end

	print("setActivityTime RankActivity    "..rankId.."  "..startMiniTime.."  "..endMiniTime)

	local npc = System.getGlobalNpc()
	if sysVar.startTimerId then
		LActor.unregScriptCallback(npc, sysVar.startTimerId)
	end
	if sysVar.endTimerId then
		LActor.unregScriptCallback(npc, sysVar.endTimerId)
	end

	local now = System.getCurrMiniTime()
	if now > endMiniTime then
		--过期
		print("error RankActivity time guoqi  ----------")
		RankActivityTimer(nil, 3, rankId)
		return
	elseif now < startMiniTime then
		--未来执行
		sysVar.startTimerId = LActor.regScriptCallback(npc, nil, (startMiniTime-now)*1000, 0, 1, "RankActivityTimer", 2, rankId)
		sysVar.endTimerId = LActor.regScriptCallback(npc, nil, (endMiniTime-now)*1000, 0, 1, "RankActivityTimer", 3, rankId)
	else
		RankActivityTimer(nil, 2, rankId)
		sysVar.startTimerId = 0
		sysVar.endTimerId = LActor.regScriptCallback(npc, nil, (endMiniTime-now)*1000, 0, 1, "RankActivityTimer", 3, rankId)
	end
end

function RankActivity.onLogin(actor)
	for rankId, _ in pairs(RankActivityConfig) do
		local sysVar = RankActivity.getSystemVar(rankId)
		if sysVar and sysVar.isInActivity and sysVar.isInActivity == 1 then
			local pack = DataPack.allocPacket(actor, BaseTypes.SystemId.timeRewardSystem, 160)
			if not pack then return end

			DataPack.writeByte(pack, rankId)
			DataPack.writeByte(pack, 1)

			DataPack.flush(pack)
		end
	end

	RankActivity.dialogChooseAward(actor, 13)
	RankActivity.dialogChooseAward(actor, 14)
end

function RankActivity.onServerStart()
	for rankId, conf in pairs(RankActivityConfig) do
		local sysVar = RankActivity.getSystemVar(rankId)
		if not sysVar then return end

		local startMiniTime
		local endMiniTime
		if conf.openDay then
			startMiniTime = System.getOpenServerStartDateTime()
			endMiniTime = startMiniTime + 24*3600 * conf.openDay
		else
			startMiniTime = System.toMiniTime(conf.startTime)
			endMiniTime = System.toMiniTime(conf.endTime)
		end
		RankActivity.setActivityTime(rankId, startMiniTime, endMiniTime)
	end
end

GameStartEventList.registerEvent(RankActivity.onServerStart)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogin, RankActivity.onLogin)

function RankActivity.gmFunction(actor, args)
	local gmid = tonumber(args[1])
	if gmid == 0 or gmid == 1 or gmid == 2 or gmid == 3 then
		local rankId = tonumber(args[2])
		if rankId == 13 then
			RankActivityTimer(nil, gmid, 14)
		end
		RankActivityTimer(nil, gmid, rankId)
	elseif gmid == 4 then
		RankActivity.setActivityTime(11, args[2].." "..args[3], args[4].." "..args[5])
	elseif gmid == 5 then
		RankActivity.dialogChooseAward(actor, 13)
	elseif gmid == 6 then
		local var = RankActivity.getActorVar(actor)
		if not var then return end
		var.hasGetAwards = nil
	end
end

GmEventFuncList.register( "rankactivity", RankActivity.gmFunction,1)

