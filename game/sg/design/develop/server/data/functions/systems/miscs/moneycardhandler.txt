--月卡处理
--#include "data\config\misc\moneycardconf.txt" once

--获取月卡信息
function YuekaNewDay()
	--print("---月卡返还，新的一天到来--")
	local sysVar = System.getStaticVar()

	if sysVar == nil then 
		return 
	end

	if sysVar.yuekaInfo == nil then
		return
	end
	local cur_time = System.getCurrMiniTime()
	-- if sysVar.yuekaCallTime == nil then
	-- 	sysVar.yuekaCallTime = 0
	-- end
	-- if (cur_time -sysVar.yuekaCallTime)  < (3600*24-20) then
	-- 	print("--不到一天，不能调用")
	-- 	return
	-- end
	-- sysVar.yuekaCallTime = cur_time
	for i=1,#sysVar.yuekaInfo do
		if sysVar.yuekaInfo[i] ~= nil then
			for _,v in pairs(MoneyCardConf) do
				if sysVar.yuekaInfo[i].accountName ~= nil and sysVar.yuekaInfo[i][v.type] ~= nil then
					if sysVar.yuekaInfo[i][v.type].end_time > cur_time then
						local daypay = MoneyCardConf[v.type].daypay
						local accountName = sysVar.yuekaInfo[i].accountName
						--System.sendGmMailOffLineByAccount(accountName, string.format(Lang.ScriptTips.yueka003,tonumber(daypay[2])), 2, daypay[1],daypay[2], 1,"月卡福利")
					end
				end
			end
		end
	end

end
MiscsImplement.GetMoneyCardInfo_1 = function(sysarg, msgid, packet) 
	local accountName = LActor.getAccountName(sysarg)
	--local aid = LActor.getActorId(sysarg)
	local sysVar = System.getStaticVar()

	if sysVar == nil then 
		return 
	end

	if sysVar.yuekaInfo == nil then
		sysVar.yuekaInfo = {}
	end

	local npack = DataPack.allocPacket(sysarg,139,212)  --申请一个数据包
	if npack == nil then 
		return 
	end

	DataPack.writeInt(npack,2)
	
	local cur_time = System.getCurrMiniTime()
	for i=1,#sysVar.yuekaInfo do
		if sysVar.yuekaInfo[i] ~= nil then
			if sysVar.yuekaInfo[i].accountName == accountName then
				for _,v in pairs(MoneyCardConf) do
					if sysVar.yuekaInfo[i][v.type] ~= nil and (sysVar.yuekaInfo[i][v.type].end_time - (3600*24*5)) > cur_time then
						DataPack.writeInt(npack, v.type) -- 月卡类型
						DataPack.writeInt(npack, 2)
						DataPack.writeInt(npack, sysVar.yuekaInfo[i][v.type].end_time - cur_time)
					elseif sysVar.yuekaInfo[i][v.type] ~= nil and sysVar.yuekaInfo[i][v.type].end_time > cur_time then
						DataPack.writeInt(npack, v.type) -- 月卡类型
						DataPack.writeInt(npack, 1)
						DataPack.writeInt(npack, sysVar.yuekaInfo[i][v.type].end_time - cur_time)
					else
						DataPack.writeInt(npack, v.type) -- 月卡类型
						DataPack.writeInt(npack, 1)
						DataPack.writeInt(npack, 0)
					end
				end
				DataPack.flush(npack)
				return
			end
		end
	end
	for _,v in pairs(MoneyCardConf) do
		DataPack.writeInt(npack, v.type)-- 月卡类型
		DataPack.writeInt(npack, 1)
		DataPack.writeInt(npack, 0)
	end	
	DataPack.flush(npack)
end

MiscsImplement.GetMoneyCardInfo = function(sysarg,sign) 
	local tips = sign or 0
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end
	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local npack = DataPack.allocPacket(sysarg,139,212)  --申请一个数据包
	if npack == nil then return end
	DataPack.writeInt(npack,tips)
	DataPack.writeInt(npack,2)
	for type,v in pairs(MoneyCardConf) do
		local can_get = 0
		local all_days = 0
		local get_days = 0
		if var.yuekaInfo[type] ~= nil then		
		 	if var.yuekaInfo[type].end_time >= cur_time then
		 		all_days = var.yuekaInfo[type].all_days
				get_days = var.yuekaInfo[type].get_days
				if var.yuekaInfo[type].can_get_reward == 1 then
					can_get = 1
				else
					can_get = 2
				end 
			end
		end
		DataPack.writeInt(npack,type)
		DataPack.writeInt(npack,can_get)
		DataPack.writeInt(npack,all_days)
		DataPack.writeInt(npack,get_days)
	end

	DataPack.flush(npack)
end
MiscsImplement.GetMoneyCardInfo1 = function ( sysarg, msgid, packet )
	MiscsImplement.GetMoneyCardInfo(sysarg)
	-- body
end
MiscsImplement.getMoneyCardReward = function (sysarg, msgid, packet)
	local type = DataPack.readInt(packet)
	--local type = 2
	if MoneyCardConf[type] == nil then
		return
	end
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end
	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime() 
	if var.yuekaInfo[type] == nil  or var.yuekaInfo[type].end_time < cur_time then
		return
	end
	if var.yuekaInfo[type].can_get_reward ~= 1 then
		return
	end
	if var.yuekaInfo[type].get_days + 1 > var.yuekaInfo[type].all_days then
		return
	end
	local daypay = MoneyCardConf[type].daypay

	LActor.changeMoney(sysarg, daypay[1], daypay[2], 1, true, "getMoneyCardReward", "")
	var.yuekaInfo[type].can_get_reward = 0
	var.yuekaInfo[type].get_days = var.yuekaInfo[type].get_days + 1
	MiscsImplement.GetMoneyCardInfo(sysarg)
end
--查询是否可购买月卡
MiscsImplement.canBuyMoneyCard = function(sysarg, msgid, packet) 

	local type = DataPack.readInt(packet)
	--type = 1
	--local type = 2
	--print("--购买月卡---购买月卡类型："..type)

	local accountName = LActor.getAccountName(sysarg)
	local sysVar = System.getStaticVar()
	if sysVar == nil then 
		return 
	end
	if MoneyCardConf[type] == nil then
		return
	end
	if sysVar.yuekaInfo == nil then
		sysVar.yuekaInfo = {}
	end
	
	local canbuy = 1
	local cur_time = System.getCurrMiniTime()
	for i=1,#sysVar.yuekaInfo do
		if sysVar.yuekaInfo[i] ~= nil then
			if sysVar.yuekaInfo[i].accountName == accountName then
				if sysVar.yuekaInfo[i][type] ~= nil then
					if sysVar.yuekaInfo[i][type].end_time - (3600 * 24* 5) > cur_time then
						canbuy = 2
					end
				end 
			end
		end
	end

	local npack = DataPack.allocPacket(sysarg,139,218)  --申请一个数据包
	if npack == nil then return end
	DataPack.writeInt(npack, type) 
	DataPack.writeInt(npack, canbuy) 
	DataPack.flush(npack)
end


MiscsImplement.buyMoneyCardCallback_1 = function(accountName, arg) 
	if arg == nil then return end
	local ty = tonumber(arg[1])
	if ty ~= 20 and ty ~= 21 then
		return
	end
	local type = 1
	if ty == 21 then
		type = 2
	end

	-- local sysVar = System.getStaticVar()
	-- if sysVar == nil then 
	-- 	return 
	-- end
	-- if MoneyCardConf[type] == nil then
	-- 	return
	-- end
	-- if sysVar.yuekaInfo == nil then
	-- 	sysVar.yuekaInfo = {}
	-- end
	
	
	-- local cur_time = System.getCurrMiniTime()
	-- local return_date = MoneyCardConf[type].return_data
	-- local day_time = System.getToday()
	-- local first_buy = true
	-- local end_time = 0
	-- for i=1,#sysVar.yuekaInfo do
	-- 	if sysVar.yuekaInfo[i] ~= nil then
	-- 		if sysVar.yuekaInfo[i].accountName == accountName then
	-- 			if sysVar.yuekaInfo[i][type] ~= nil  and sysVar.yuekaInfo[i][type].end_time > cur_time then
	-- 				sysVar.yuekaInfo[i][type].end_time = sysVar.yuekaInfo[i][type].end_time + ((return_date-1)*3600*24)
	-- 			elseif sysVar.yuekaInfo[i][type] ~= nil and sysVar.yuekaInfo[i][type].end_time <= cur_time then
	-- 				sysVar.yuekaInfo[i][type].end_time = day_time + (return_date*3600*24)
	-- 			else
	-- 				sysVar.yuekaInfo[i][type] = {}
	-- 				sysVar.yuekaInfo[i][type].end_time = day_time + (return_date*3600*24)
	-- 			end
	-- 			first_buy = false
	-- 		    end_time = sysVar.yuekaInfo[i][type].end_time
	-- 			break
	-- 		end
	-- 	end
	-- end
	-- if first_buy then
	-- 	sysVar.yuekaInfo[#sysVar.yuekaInfo+1] = {}
	-- 	sysVar.yuekaInfo[#sysVar.yuekaInfo].accountName = accountName
	-- 	sysVar.yuekaInfo[#sysVar.yuekaInfo][type] = {}
	-- 	sysVar.yuekaInfo[#sysVar.yuekaInfo][type].end_time = day_time + (return_date*3600*24)
	-- 	end_time = sysVar.yuekaInfo[#sysVar.yuekaInfo][type].end_time
	-- end
	-- local firstpay = MoneyCardConf[type].firstpay
	-- local daypay = MoneyCardConf[type].daypay
	-- local shengyu_time = end_time - cur_time
	-- System.sendGmMailOffLineByAccount(accountName, string.format(Lang.ScriptTips.yueka002,tonumber(firstpay[2]),tonumber(daypay[2])), 2, firstpay[1],firstpay[2], 1,"月卡福利")
	-- System.sendGmMailOffLineByAccount(accountName, string.format(Lang.ScriptTips.yueka003,tonumber(daypay[2])), 2, daypay[1],daypay[2], 1,"月卡福利")
	
	local sysarg = LActor.getActorByAccountName(accountName)
	if sysarg == nil then
		return
	end

	local itemid,itemnum = MoneyCardConf[type].lib_id[1],MoneyCardConf[type].lib_id[2] or 1
	-- if Item.getBagEmptyGridCount( sysarg ) < 1 then --获取背包剩格子数
 --        LActor.sendTipmsg(sysarg, Lang.ScriptTips.osa0005, ttMessage)
	-- 	return
 --    end
	LActor.addItem(sysarg, itemid, 0, 0, itemnum, 1, "buyyueka", 1)
	-- local npack = DataPack.allocPacket(sysarg,139,213)  --申请一个数据包
	-- if npack == nil then 
	-- 	return 
	-- end
	-- DataPack.writeInt(npack, 1) --是否购买成功
	-- DataPack.writeInt(npack, type) -- 购买类型
	-- DataPack.writeInt(npack, shengyu_time) -- 今天是否可以领
	-- DataPack.flush(npack)
end
MiscsImplement.test_buyMoneyCardCallback = function ( sysarg, msgid, packet )
	local type = DataPack.readInt(packet)
	if MoneyCardConf[type] == nil then
		return
	end
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end

	local addVal = 300
	if type == 2 then
		addVal = 980
	end
	LActor.recharge( sysarg, addVal )

	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local day_time = System.getToday()
	if var.yuekaInfo[type] == nil then --第一次购买月卡
		var.yuekaInfo[type] = {}
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	elseif var.yuekaInfo[type].end_time >= cur_time then  --月卡还在有效期内
		var.yuekaInfo[type].end_time = var.yuekaInfo[type].end_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].all_days = var.yuekaInfo[type].all_days + MoneyCardConf[type].return_data
	else --月卡过期
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	end
	local firstpay = MoneyCardConf[type].firstpay

	LActor.changeMoney(sysarg, firstpay[1], firstpay[2], 1, true, "getMoneyCardReward", "")

	MiscsImplement.GetMoneyCardInfo(sysarg,1)
end
MiscsImplement.buyMoneyCardCallback = function(accountName, arg) 
	print("---在线购买月卡--")
	local ty = tonumber(arg[1])
	if ty ~= 20 and ty ~= 21 then
		return
	end
	local type = 1
	local addVal = 300
	if ty == 21 then
		type = 2
		addVal = 980
	end
	print("---type",type)
	print("---addVal",addVal)
	if MoneyCardConf[type] == nil then
		return
	end
	local sysarg = LActor.getActorByAccountName(accountName)
	if sysarg == nil then
		return
	end
	--if 
	LActor.recharge( sysarg, addVal )
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end

	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local day_time = System.getToday()
	if var.yuekaInfo[type] == nil then --第一次购买月卡
		var.yuekaInfo[type] = {}
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	elseif var.yuekaInfo[type].end_time >= cur_time then  --月卡还在有效期内
		var.yuekaInfo[type].end_time = var.yuekaInfo[type].end_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].all_days = var.yuekaInfo[type].all_days + MoneyCardConf[type].return_data
	else --月卡过期
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	end
	local firstpay = MoneyCardConf[type].firstpay

	LActor.changeMoney(sysarg, firstpay[1], firstpay[2], 1, true, "getMoneyCardReward", "")
	System.logCounter(
					  LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), 
					  "activityreward",tostring(0) , tostring(1001), tostring(type), "",
					  tostring(LActor.getName(sysarg)), var.download_from, "", lfDB
					 )
	MiscsImplement.GetMoneyCardInfo(sysarg,1)
	print("--kkkkkkkkk11111111")
end
MiscsImplement.NewDayArrive = function (sysarg)
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end

	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local day_time = System.getToday()
	for type,v in pairs(MoneyCardConf) do
		if var.yuekaInfo[type] ~= nil then
			var.yuekaInfo[type].can_get_reward = 1
		end
	end
end
MiscsImplement.Offline_bugMoneycardMsg = function( sysarg, msgType, dp, num )
	print("---离线购买月卡--",msgType,num)
	if msgType ~= omMoneycard then return end
	local ty = num
	if ty ~= 20 and ty ~= 21 then
		return
	end
	local type = 1
	local addVal = 300
	if ty == 21 then
		type = 2
		addVal = 980
	end
	--local accountName = LActor.getAccountName(sysarg)
	--OneRmbItem.GetAward(accountName)

	print("---type",type)
	print("---addVal",addVal)
	if MoneyCardConf[type] == nil then
		return
	end
	-- local sysarg = LActor.getActorByAccountName(accountName)
	-- if sysarg == nil then
	-- 	return
	-- end
	--if 
	LActor.recharge( sysarg, addVal )
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end

	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local day_time = System.getToday()
	if var.yuekaInfo[type] == nil then --第一次购买月卡
		var.yuekaInfo[type] = {}
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	elseif var.yuekaInfo[type].end_time >= cur_time then  --月卡还在有效期内
		var.yuekaInfo[type].end_time = var.yuekaInfo[type].end_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].all_days = var.yuekaInfo[type].all_days + MoneyCardConf[type].return_data
	else --月卡过期
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	end
	local firstpay = MoneyCardConf[type].firstpay

	LActor.changeMoney(sysarg, firstpay[1], firstpay[2], 1, true, "getMoneyCardReward", "")
	System.logCounter(
					  LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), 
					  "activityreward",tostring(0) , tostring(1001), tostring(type), "",
					  tostring(LActor.getName(sysarg)), var.download_from, "", lfDB
					 )
	MiscsImplement.GetMoneyCardInfo(sysarg,1)
	print("--kkkkkkkkk2222222")
end

MiscsImplement.UseMoneyCardCallback = function ( sysarg, type1 )
	
	local type = type1
	if MoneyCardConf[type] == nil then
		return
	end
	local var = LActor.getStaticVar(sysarg)
	if var == nil then return end

	local addVal = 300
	if type == 2 then
		addVal = 980
	end
	LActor.recharge( sysarg, addVal )
	
	if var.yuekaInfo == nil then
		var.yuekaInfo = {}
	end
	local cur_time = System.getCurrMiniTime()
	local day_time = System.getToday()
	if var.yuekaInfo[type] == nil then --第一次购买月卡
		var.yuekaInfo[type] = {}
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	elseif var.yuekaInfo[type].end_time >= cur_time then  --月卡还在有效期内
		var.yuekaInfo[type].end_time = var.yuekaInfo[type].end_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].all_days = var.yuekaInfo[type].all_days + MoneyCardConf[type].return_data
	else --月卡过期
		var.yuekaInfo[type].end_time = day_time + MoneyCardConf[type].return_data * 24* 3600
		var.yuekaInfo[type].can_get_reward = 1
		var.yuekaInfo[type].get_days = 0
		var.yuekaInfo[type].all_days = MoneyCardConf[type].return_data
	end
	local firstpay = MoneyCardConf[type].firstpay

	LActor.changeMoney(sysarg, firstpay[1], firstpay[2], 1, true, "getMoneyCardReward", "")

	MiscsImplement.GetMoneyCardInfo(sysarg,1)
end

function YueCardItemUseHandler(sysarg, itemIdx, itemPtr, conf)
	if conf == nil then return end
	local id = conf.item_id
	local type = conf.type
	--LActor.changeMoney(sysarg, mtYuanbao, yuanbao, 1, true, "yuanbaocard")
	LActor.removeItemByPtr(sysarg,itemPtr,1,true,"mothcardremove",5) 
	MiscsImplement.UseMoneyCardCallback(sysarg, type)
end

function yueCardItemInit(sysarg)
	for i = 1, table.getn(MothCardItem) do
		local conf = MothCardItem[i]
		GlobalItemFn[conf.item_id] = { func = YueCardItemUseHandler, params = conf, }
	end
end

table.insert(InitFnTable, yueCardItemInit)




MiscsImplement.registerMsgHandler(212, MiscsImplement.GetMoneyCardInfo1)
MiscsImplement.registerMsgHandler(213, MiscsImplement.test_buyMoneyCardCallback)
MiscsImplement.registerMsgHandler(218, MiscsImplement.getMoneyCardReward)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeMoneyCard, MiscsImplement.buyMoneyCardCallback)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeNewDayArrive, MiscsImplement.NewDayArrive)
OffLineMsgDispatcher.registerEventCall(omMoneycard, MiscsImplement.Offline_bugMoneycardMsg)
--MiscsImplement.registerMsgHandler(216, MiscsImplement.GetMoneyCardInfo)