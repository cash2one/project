--万圣节活动奖励

--#include "data\language\LangCode.txt" once
--#include "data\config\item\wsjrewardconfig.txt" once

WsjFunc = {}

-- 是否活动时间
--[[WsjFunc.IsInTimeRange = function()
	local start_t = WsjConfig.starttime
	local end_t = WsjConfig.endtime
	local now_t = System.getCurrMiniTime()
	if now_t < System.timeEncode(start_t[1], start_t[2], start_t[3], start_t[4], start_t[5], start_t[6])
		or now_t > System.timeEncode(end_t[1], end_t[2], end_t[3], end_t[4], end_t[5], end_t[6]) then
		return false
	end

	return true
end]]


-- 提示
WsjFunc.MoneyTips = {
	[0] = Lang.ScriptTips.x00004, 
	[1] = Lang.ScriptTips.x00005,
	[2] = Lang.ScriptTips.x00006, 
	[3] = Lang.ScriptTips.x00007,
}

ONLINEREWARD.WSJRewardImplement = 
{
	-- 发送领取奖励结果
	SendRewardResult = function(sysarg, awardinfo)

		local npack = DataPack.allocPacket(sysarg,138,34)  --申请一个数据包
		if npack == nil then return end

		DataPack.writeInt(npack, #awardinfo) -- 奖励个数

		-- 各个奖励信息
		for i = 1, #awardinfo do
			local c = awardinfo[i]
			DataPack.writeInt(npack, c.rewardtype) -- 奖励类型
			if c.rewardtype == 1 then
				DataPack.writeInt(npack, c.itemid) -- 类型
				DataPack.writeInt(npack, c.amount) -- 数量
			elseif c.rewardtype == 2 then -- 绑定银两
				DataPack.writeInt(npack, c.type) -- 类型
				DataPack.writeInt(npack, c.amount) -- 数量
			end
		end

		DataPack.flush(npack)
	end,


	--通过索引值获取奖励列表
	GetWsjRewardConf = function(sysarg,rewardID,rand)

		local rewardconf = WsjConfig.rewards[rewardID]
		if rewardconf == nil then
			return
		end
		local level = LActor.getIntProperty(sysarg,PROP_LEVEL)
		local rewardconfig = {}
		if level < 20 then
			rewardconfig = rewardconf[1]
		elseif level < 40 then
			rewardconfig = rewardconf[2]
		else
			rewardconfig = rewardconf[3]
		end

		if (( rewardconfig == nil ) or (table.getn(rewardconfig) <= 0)) then
			print("---Reward config empty."..rewardID)
			return {}
		end
		local rewardconfigdata = rewardconfig[rand]
		return rewardconfigdata
	end,

	--客户端申请领取在线奖励
	getWsjReward = function ( sysarg, systemid, msgid, packet )
		-- 判断是否在活动时间内
		--[[if not WsjFunc.IsInTimeRange() then
			LActor.sendTipmsg(sysarg, Lang.ScriptTips.wsj018, ttMessage)
			return 
		end]]

		local var = LActor.getStaticVar( sysarg )
		local leaveReward = var.wsjReward
		if leaveReward == nil or leaveReward[1] == nil then return end -- 正常情况这个是不会为空的，登录的时候会初始化

		local t = System.getCurrMiniTime()

		-- 今天领奖次数是否已经用完
	  	if leaveReward[1] > #WsjConfig.times then
	  		LActor.sendTipmsg(sysarg,Lang.ScriptTips.wsj017,ttMessage)
	  		return 
	  	end
	  
		-- 领奖时间未到
		if t - leaveReward[3] < leaveReward[2] then
			LActor.sendTipmsg(sysarg,Lang.ScriptTips.f00004,ttMessage)
			return
		end

		-- 获取奖励配置
		local onlineRewardConf = ONLINEREWARD.WSJRewardImplement.GetWsjRewardConf(sysarg,leaveReward[1],leaveReward[5])
		if onlineRewardConf == nil then return end

		-- 检查背包够不够空间
		local needspace = 0  --物品所需空格
		for i,c in ipairs(onlineRewardConf) do
			if c.rewardtype == 1 then
				needspace = needspace + Item.getAddItemNeedGridCount( sysarg, c.itemid, c.amount )
			end
		end
		if needspace > Item.getBagEmptyGridCount( sysarg ) then
			-- local str = string.format(Lang.ScriptTips.f00016,needspace)
			-- LActor.sendTipmsg( sysarg, str,ttDialog )
			LActor.SendGeneralTips(sysarg, 7, 0, 0)
			return
		end

	  	--领奖了
		for i = 1, #onlineRewardConf do
			local c = onlineRewardConf[i]
			if c.rewardtype == 1 then -- 物品
				LActor.addItem(sysarg,c.itemid,c.quality,c.strong, c.amount,c.bind,"GlobalNPC ",57)
				local itemname = Item.getItemName(c.itemid)
				if itemname ~= nil then
					local allmsg = string.format(Lang.ScriptTips.q00037,itemname,c.amount)
					--print(allmsg)
					LActor.sendTipmsg(sysarg, allmsg, ttMessage)  
				end
			elseif c.rewardtype == 2 then -- 绑定银两
				LActor.changeMoney( sysarg, c.type, c.amount )
				local moneystr = WsjFunc.MoneyTips[c.type]
				local allmsg = string.format(moneystr,c.amount)  
				LActor.sendTipmsg(sysarg, allmsg, ttMessage)
			end
		end

		--跨日处理
		if System.isSameDay(leaveReward[4], t) == false then  
			-- 不是当天，按第一次
			leaveReward[1] = 1
			leaveReward[2] = WsjConfig.times[1]
			leaveReward[3] = t
			leaveReward[4] = t
			leaveReward[5] = getRewardOnlineRand(sysarg, leaveReward[1])  --记录奖励的索引
		else
			--是当天领奖了
			leaveReward[1] = leaveReward[1] + 1
			if leaveReward[1] <= #WsjConfig.times then
				leaveReward[2] = WsjConfig.times[leaveReward[1]]
				leaveReward[3] = t
				leaveReward[4] = t -- 更新领奖时间
				leaveReward[5] = getRewardOnlineRand(sysarg, leaveReward[1])
			end
		end

		-- 发送领奖结果
		-- ONLINEREWARD.WSJRewardImplement.SendRewardResult(sysarg, onlineRewardConf)

		--138 通知客户端一次在线奖励 1
		local npack = DataPack.allocPacket(sysarg,138,33)  --申请一个数据包
		if npack == nil then return end

		DataPack.writeByte(npack, leaveReward[1]) -- 第几次领奖
		DataPack.writeUInt(npack, leaveReward[2]) -- 剩余领奖时间
		DataPack.writeInt(npack, #WsjConfig.times - leaveReward[1] + 1) -- 剩余领奖次数
		DataPack.flush(npack)
	end,
}



--上线奖励
--[[
leaveReward
1 : 下次领奖是第几次
2 ：下次领奖剩余时间
3
4 ：上次领奖时间
5 ：第几个奖品
]]

-- 用户登录发送在线奖励信息
EventCallDispatcher.OnWSJLogin = function ( sysarg )
	--if not WsjFunc.IsInTimeRange() then return end -- 是否活动时间

	-- 开始
	local npack = DataPack.allocPacket(sysarg,138,32)  --通知一次，礼包那里用
	if npack ~= nil then
		DataPack.writeInt(npack, 1)
		DataPack.flush(npack)
	end

	local t = System.getCurrMiniTime()
     
     --获得上次剩余的在线奖励记录
	local var = LActor.getStaticVar( sysarg )
	local leaveReward = var.wsjReward

	local rand = 0
	if leaveReward == nil then --初始化
		var.wsjReward = {}
		leaveReward = var.wsjReward
		leaveReward[1] = 1 
		leaveReward[2] = WsjConfig.times[1]
		leaveReward[3] = 0
		leaveReward[4] = t -- 还没领过奖，将上次领奖时间设为登录时间
		leaveReward[5] = getRewardOnlineRand(sysarg,leaveReward[1])  --记录奖励的索引
	end

	--跨日处理
	if System.isSameDay(leaveReward[4], t) == false then--第二天初始化
		--print("next day -------")
		leaveReward[1] = 1 
		leaveReward[2] = WsjConfig.times[1]
		leaveReward[3] = 0
		leaveReward[4] = t
		leaveReward[5] = getRewardOnlineRand(sysarg,leaveReward[1])  --记录奖励的索引
	end

	-- if leaveReward[1] > #WsjConfig.times then return end   --领奖次数限制，防止发送多余次数给客户端

	leaveReward[3] = t -- 开始累加在线时间

	EventCallDispatcher.SendRewardMsg(sysarg, 33, leaveReward[1], leaveReward[2], #WsjConfig.times - leaveReward[1] + 1)
end

--在线奖励的情况的下线存储
EventCallDispatcher.OnWSJLogout = function ( sysarg )
	--if not WsjFunc.IsInTimeRange() then return end -- 是否活动时间


	local leaveReward = LActor.getStaticVar( sysarg ).wsjReward	--获得上次剩余的在线奖励记录
	if leaveReward == nil then return end

	if leaveReward[1] > #WsjConfig.times then return end -- 可能是领奖次数已经用完

	local t = System.getCurrMiniTime()

	-- 保存剩余领奖时间，下次登录时候继续使用这个时间
	leaveReward[2] = leaveReward[2] - (t - leaveReward[3])
	if leaveReward[2] < 0 then
		leaveReward[2] = 0
	end
end

-- 新一天到来的处理
EventCallDispatcher.OnWSJNewDay = function (sysarg, arg)
	if arg == nil or arg[1] == nil then return end

	--if not WsjFunc.IsInTimeRange() then return end -- 是否活动时间

	if arg[1] == 1 then return end -- 登录时的检查，不在这里处理

	local var = LActor.getStaticVar(sysarg)
	local leaveReward = var.wsjReward

	if leaveReward == nil then return end

	local tm = System.getCurrMiniTime()

	--if leaveReward[1] > #WsjConfig.times then -- 上次全部奖品已经领完, 初始值
		leaveReward[1] = 1 
		leaveReward[2] = WsjConfig.times[1]
		leaveReward[3] = tm
		leaveReward[4] = tm
		leaveReward[5] = getRewardOnlineRand(sysarg,leaveReward[1])  --记录奖励的索引
		EventCallDispatcher.SendRewardMsg(sysarg, 33, leaveReward[1], leaveReward[2], #WsjConfig.times - leaveReward[1] + 1)
	--end
end

-- 通知万圣节活动开始
EventCallDispatcher.WanShengJieStart = function ()
	local sys = System.getStaticVar()
	if sys.kaifuonlinesign ==  nil then sys.kaifuonlinesign = 0 end
	if sys.kaifuonlinesign == 1 then return end

	local dp = LDataPack.allocPacket()
	if dp == nil then return end

	LDataPack.writeByte(dp, 138)
	LDataPack.writeByte(dp, 32)
	LDataPack.writeInt(dp, 1)

	System.broadcastData(dp)

	-- 初始化信息

	local t = System.getCurrMiniTime()
	local actors = LuaHelp.getAllActorList()
	if actors == nil then return end

	for i=1,#actors do
		local actor = actors[i]

		local var = LActor.getStaticVar(actor)
		local leaveReward = var.wsjReward

		if leaveReward == nil then --初始化
			var.wsjReward = {}
			leaveReward = var.wsjReward
			leaveReward[1] = 1 
			leaveReward[2] = WsjConfig.times[1]
			leaveReward[3] = 0
			leaveReward[4] = t -- 还没领过奖，将上次领奖时间设为登录时间
			leaveReward[5] = getRewardOnlineRand(actor,leaveReward[1])  --记录奖励的索引
		end

		EventCallDispatcher.SendRewardMsg(actor, 33, leaveReward[1], leaveReward[2], #WsjConfig.times - leaveReward[1] + 1)
	end

	sys.kaifuonlinesign = 1

end



-- 通知万圣节活动结束
--[[function WanShengJieEnd()
	local dp = LDataPack.allocPacket()
	if dp == nil then return end

	LDataPack.writeByte(dp, 138)
	LDataPack.writeByte(dp, 32)
	LDataPack.writeInt(dp, 0)

	System.broadcastData(dp)
end]]

table.insert(TimeFnTable, EventCallDispatcher.WanShengJieStart)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogin, EventCallDispatcher.OnWSJLogin)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogout, EventCallDispatcher.OnWSJLogout)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeNewDayArrive, EventCallDispatcher.OnWSJNewDay)


function wsjreward(sysarg)
	ONLINEREWARD.WSJRewardImplement.getWsjReward(sysarg)
end