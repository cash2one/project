-- 通用通关型副本 (组队一条龙副本)
-- Author: LiaoYuDong
-- Data: 2016-5-31

--#include "data\config\gameplay\commfubenplayfuncconfig.txt" once

CommFubenPlayFuncs = {}

-- 是否通用副本的场景id
CommFubenPlayFuncs.isOwnSceneId = function (sceneId)
	for k, v in pairs(CommFubenPlayFuncConfig) do
		if v.sceneId == sceneId then
			return true
		end
	end
	return false
end

-- 获取对应副本中对应难度的boss数量
CommFubenPlayFuncs.getDifficultBossNum = function (fubenId, difficul)
	local fubenConfig = CommFubenPlayFuncConfig[fubenId]
	if fubenConfig == nil then
		return 0
	end
	if fubenConfig.monsterList[difficul] == nil then
		return 0
	end
	local num = 0
	for k, v in pairs(fubenConfig.monsterList[difficul]) do -- 第一层代表波数
		for n, m in pairs(v) do -- 第二层实际的怪物
			if m.isBoss == true then
				num = num + m.monsterNum
			end
		end
	end
	return num
end

-- 获取对应副本中对应难度的波数
CommFubenPlayFuncs.getDifficultStageNum = function (fubenId, difficul)
	local fubenConfig = CommFubenPlayFuncConfig[fubenId]
	if fubenConfig == nil then
		return 0
	end
	if fubenConfig.monsterList[difficul] == nil then
		return 0
	end
	local num = 0
	for k, v in pairs(fubenConfig.monsterList[difficul]) do -- 第一层代表波数
		num = num + 1
	end
	return num
end

-- 判断某一波中是否有boss
CommFubenPlayFuncs.isDifficultStageHasBoss = function (fubenId, difficul, stage)
	local fubenConfig = CommFubenPlayFuncConfig[fubenId]
	if fubenConfig == nil then
		return false
	end
	if fubenConfig.monsterList[difficul] == nil then
		return false
	end
	if fubenConfig.monsterList[difficul][stage] == nil then
		return false
	end
	for k, v in pairs(fubenConfig.monsterList[difficul][stage]) do -- 第stage波数
		if v.isBoss == true then
			return true
		end
	end	
	return false
end

-- 副本结算
CommFubenPlayFuncs.goGameOver = function (fubenPtr, success)
	success = success or 0 -- 默认不成功
	local fubenId = Fuben.getFubenIdbyFuBenPtr(fubenPtr)
	debug_print("==================> 进行副本结算:" .. tostring(fubenId))
	if CommFubenPlayFuncConfig[fubenId] == nil then
		return
	end
	local fbActorList = LuaHelp.getFbActorList(fubenPtr)
	if fbActorList == nil then
		return
	end
	local fbVar = Fuben.getDyanmicVar(fubenPtr)
	fbVar.IsTongguan = success -- 我次奥 这是有用的字段 不能随意改名
	Fuben.setStopMonsterRunOne(fbActorList[1])
	for i = 1 , #fbActorList do
		fubenjiesuan.GameOver(fbActorList[i])
	end
	local fubenHandle = Fuben.getFubenHandle(fubenPtr)
	Fuben.SetFubenTime(fubenHandle, 12) -- 默认12秒后踢出来
end

-- 副本退出
CommFubenPlayFuncs.goFubenExit = function (actorobj, fubenHandle, exitWay)
	-- body
	if not exitWay or exitWay ~= 1 or not actorobj or not fubenHandle then
		return
	end
	local fbPtr = Fuben.getFubenPtr(fubenHandle)

	--恢复技能cd
	LActor.restoreRecordCD(actorobj)
	fubenbase.ExitFubenRestore(actorobj)
	LActor.partnerOnActorRelive(actorobj)
end

-- 杀光了整层的怪物
CommFubenPlayFuncs.killStageAllMonster = function (sceneId, scenePtr, flag, monsterEntity)
	debug_print("=======================> CommFubenPlayFuncs.killStageAllMonster")
	if CommFubenPlayFuncs.isOwnSceneId(sceneId) == true then
		local sceneHandle = Fuben.getSceneHandleByPtr(scenePtr)
		if sceneHandle <= 0 then
			return
		end
		local fbPtr = Fuben.getSceneFuben(scenePtr)
		if fbPtr == nil then
			return
		end
		local fubenHandle = Fuben.getFubenHandle(fbPtr)
		local fubenId = Fuben.getFubenIdbyFuBenPtr(fbPtr)
		local fubenConfig = CommFubenPlayFuncConfig[fubenId]

		local fbVar = Fuben.getDyanmicVar(fbPtr)
		if fbVar.commfubenplayfunc_var == nil then
			return
		end

		local stage = fbVar.commfubenplayfunc_var.now_stage + 1

		local difficul = Fuben.getFubenDifficulty(fubenHandle)

		local difficulConfig = fubenConfig.monsterList[difficul]

		if difficulConfig == nil then
			debug_print("===============> 错误的难度配置")
			return
		end

		if CommFubenPlayFuncs.isDifficultStageHasBoss(fubenId, difficul, fbVar.commfubenplayfunc_var.now_stage) == true then -- 如果上一波是boss波 也就是boss需要加1
			fbVar.commfubenplayfunc_var.kill_boss = fbVar.commfubenplayfunc_var.kill_boss + 1
		end

		local totalStage = CommFubenPlayFuncs.getDifficultStageNum(fubenId, difficul)
		local totalBossNum = CommFubenPlayFuncs.getDifficultBossNum(fubenId, difficul)
		debug_print(string.format("======================> totalStage:%d, totalBossNum:%d, now_stage:%d, kill_boss:%d", totalStage, totalBossNum, fbVar.commfubenplayfunc_var.now_stage, fbVar.commfubenplayfunc_var.kill_boss))
		local fbActorList = LuaHelp.getFbActorList(fbPtr)

		if fbActorList ~= nil then
			for i = 1, #fbActorList do
				CommFubenPlayFuncs.sendKillBossNum(fbActorList[i], fubenId, fbVar.commfubenplayfunc_var.kill_boss, totalBossNum)
			end
		end

		if difficulConfig[stage] == nil then -- 没有配置了 或者达到最大波数了 结算
			-- 结束通关
			debug_print("===============> 达到最大层数 通关")
			CommFubenPlayFuncs.goGameOver(fbPtr, 1)
			return
		end

		fbVar.commfubenplayfunc_var.now_stage = fbVar.commfubenplayfunc_var.now_stage + 1 -- 波数增加1

		if fbActorList ~= nil then
			for i = 1, #fbActorList do
		  		CommFubenPlayFuncs.sendNowStage(fbActorList[i], fubenId, difficul, fbVar.commfubenplayfunc_var.now_stage, totalStage)
			end
		end
		
		-- 创建怪物
		CommFubenPlayFuncs.createMonsters(fubenHandle, sceneId, fbVar.commfubenplayfunc_var.now_stage)
	end
end

-- 创建怪物
CommFubenPlayFuncs.createMonsters = function (fubenHandle, sceneId, stage)	
	local sceneHandle = Fuben.getSceneHandleById(sceneId, fubenHandle)
	if sceneHandle <= 0 then
		debug_print("========> 通用副本创建怪物失败 sceneHandle 不存在")
		return
	end
	local fbPtr = Fuben.getFubenPtr(fubenHandle)
	local fubenId = Fuben.getFubenIdbyFuBenPtr(fbPtr)

	local fubenConfig = CommFubenPlayFuncConfig[fubenId]

	if fubenConfig == nil then
		debug_print("========> 通用副本无此副本id:" .. tostring(fubenId))
		return
	end

	local difficul = Fuben.getFubenDifficulty(fubenHandle) or 3 -- 默认深渊
	if fubenConfig.monsterList[difficul] == nil then
		debug_print("========> 通用副本无对应难度配置文件:" .. tostring(difficul))
		return
	end
	local monsterListConf = fubenConfig.monsterList[difficul][stage]
	if monsterListConf == nil then
		debug_print("========> 通用副本无对应波数刷怪配置文件:" .. tostring(stage))
		return
	end
	for k, v in pairs(monsterListConf) do
		Fuben.createMonsters(sceneHandle, v.monsterId, v.position[1], v.position[2], v.position[3], v.position[4], v.monsterNum, 0, true)
	end
end

CommFubenPlayFuncs.isFubenAllActorDie = function (fubenPtr)
	local isAllDie = true
	local actorList = LuaHelp.getFbActorList(fubenPtr)
	if actorList ~= nil then
		for i = 1 , #actorList do
            if LActor.ActorIsDie(actorList[i]) == true then
                isAllDie = false
                break
            end
		end
	end
	return isAllDie
end

-- 注册所有副本的进入事件处理
CommFubenPlayFuncs.registerAllEnterFuben = function ()
	for k, v in pairs(CommFubenPlayFuncConfig) do
		fubenbase.registerEnterFuben(tonumber(k), CommFubenPlayFuncs.enterInit)
		EventCallDispatcher.registerFubenExit(tonumber(k), CommFubenPlayFuncs.goFubenExit)
		fubenjiesuan.AddFubenConfig(tonumber(k), v)
		fubenjiesuan.AddActivationType(tonumber(k), v.activationType)
	end
end

-- 副本怪物都死亡的注册事件
CommFubenPlayFuncs.registerAllMonsterDeath = function ()
	for k, v in pairs(CommFubenPlayFuncConfig) do
		MonAllKilledDispatcher.register(v.sceneId, CommFubenPlayFuncs.killStageAllMonster, 1)
	end
end

-- 玩家死亡触发
CommFubenPlayFuncs.actorDeath = function (actorobj, killerEntity)
	local fubenId = LActor.getFubenId(actorobj)
	if CommFubenPlayFuncConfig[fubenId] == nil then
		return
	end
	local fbPtr = LActor.getFubenPrt(actorobj)

	if CommFubenPlayFuncs.isFubenAllActorDie(fbPtr) == true then
		CommFubenPlayFuncs.goGameOver(fbPtr, 0)
	end
	-- 标记当前玩家已死亡
	fbVar = Fuben.getDyanmicVar(fbPtr)
	if fbVar.commfubenplayfunc_var.deathActor == nil then
		fbVar.commfubenplayfunc_var.deathActor = {}
	end
	local actorId = LActor.getActorId(actorobj)
	fbVar.commfubenplayfunc_var.deathActor[actorId] = {} -- 标记死亡
	fbVar.commfubenplayfunc_var.deathActor[actorId].death = 1
	fbVar.commfubenplayfunc_var.deathActor[actorId].hp = 0
	fbVar.commfubenplayfunc_var.deathActor[actorId].mp = LActor.getIntProperty(actorobj, PROP_MP)
end

CommFubenPlayFuncs.actorLogin = function (actorobj, firstLogin)
	local fbPtr = LActor.getFubenPrt(actorobj)
	if fbPtr ~= nil then
		local fubenId = Fuben.getFubenIdbyFuBenPtr(fbPtr)
		if CommFubenPlayFuncConfig[fubenId] == nil then
			return
		end
		local fbVar = Fuben.getDyanmicVar(fbPtr)
		if fbVar.commfubenplayfunc_var ~= nil then
			local fubenHandle = Fuben.getFubenHandle(fbPtr)
			local difficul = Fuben.getFubenDifficulty(fubenHandle)
			local totalStage = CommFubenPlayFuncs.getDifficultStageNum(fubenId, difficul)
			local totalBossNum = CommFubenPlayFuncs.getDifficultBossNum(fubenId, difficul)

			local actorId = LActor.getActorId(actorobj)
			if fbVar.commfubenplayfunc_var.deathActor ~= nil and fbVar.commfubenplayfunc_var.deathActor[actorId] ~= nil then
				if fbVar.commfubenplayfunc_var.deathActor[actorId].death == 1 then -- 已死亡
					LActor.setIntProperty(actorobj, PROP_HP, fbVar.commfubenplayfunc_var.deathActor[actorId].hp)
					LActor.setIntProperty(actorobj, PROP_HP, fbVar.commfubenplayfunc_var.deathActor[actorId].mp)
				end
			end
			
			CommFubenPlayFuncs.sendNowStage(actorobj, fubenId, difficul, fbVar.commfubenplayfunc_var.now_stage, totalStage)
			CommFubenPlayFuncs.sendKillBossNum(actorobj, fubenId, fbVar.commfubenplayfunc_var.kill_boss, totalBossNum)
		end
	end
end

-- 发送当前波数
CommFubenPlayFuncs.sendNowStage = function (actorobj, fubenId, difficul, nowStage, totalStage)
	local isBoss = 0
	if CommFubenPlayFuncs.isDifficultStageHasBoss(fubenId, difficul, nowStage) == true then
		isBoss = 1
	end
	debug_print(string.format("======================>发送当前波数 -> 是否boss波数:%d fubenId:%d, difficul:%d, nowStage:%d, totalStage:%d", isBoss, fubenId, difficul, nowStage, totalStage))
	local pack = DataPack.allocPacket(actorobj, 167, 11)
	DataPack.writeInt(pack, fubenId)
	DataPack.writeInt(pack, 1) -- 副本协议1 发送当前波数
	DataPack.writeInt(pack, nowStage)
	DataPack.writeInt(pack, totalStage)
	DataPack.writeInt(pack, isBoss) -- 是否boss波
	DataPack.flush(pack)
end

-- 发送击杀了多少boss
CommFubenPlayFuncs.sendKillBossNum = function (actorobj, fubenId, killBossNum, totalBossNum)
	local pack = DataPack.allocPacket(actorobj, 167, 11)
	DataPack.writeInt(pack, fubenId)
	DataPack.writeInt(pack, 2) -- 副本协议2 发送击杀的boss数量
	DataPack.writeInt(pack, killBossNum)
	DataPack.writeInt(pack, totalBossNum)
	DataPack.flush(pack)
end

CommFubenPlayFuncs.enterInit = function (actorobj, fubenHandle)
	local fbPtr = Fuben.getFubenPtr(fubenHandle)
	if fbPtr == nil then
		return
	end
	local difficul = Fuben.getFubenDifficulty(fubenHandle)
	local fubenId = Fuben.getFubenIdbyFuBenPtr(fbPtr)
	local fubenConfig = CommFubenPlayFuncConfig[fubenId]
	if fubenConfig == nil then
		return
	end

	local fbVar = Fuben.getDyanmicVar(fbPtr)
	fbVar.commfubenplayfunc_var = {}
	fbVar.commfubenplayfunc_var.now_stage = 1 -- 初始化在第一波
	fbVar.commfubenplayfunc_var.kill_boss = 0 -- 击杀boss数量

	local sceneHandle = Fuben.getSceneHandleById(fubenConfig.sceneId, fubenHandle)
	-- 设置结界区域
	Fuben.initDyanmicObstacleData(sceneHandle)

	-- 创建该场景内的怪物
	CommFubenPlayFuncs.createMonsters(fubenHandle, fubenConfig.sceneId, fbVar.commfubenplayfunc_var.now_stage)

	local totalStage = CommFubenPlayFuncs.getDifficultStageNum(fubenId, difficul)
	local totalBossNum = CommFubenPlayFuncs.getDifficultBossNum(fubenId, difficul)
	local nTeam = LActor.getTeamId(actorobj)
	if nTeam > 0 then
		local nActionList = LuaHelp.getTeamMemberList(actorobj)
		for i = 1 , #nActionList do
      		LActor.enterFuBen(nActionList[i], fubenHandle, fubenConfig.sceneId, fubenConfig.position[1], fubenConfig.position[2])
      		if i == 1 then
				local scenePtr = LActor.getScenePtr(nActionList[i])
				Fuben.setDyanmicObstacleDataBySquare(scenePtr , -1, fubenConfig.blockArea)
      		end
      		fubenbase.Init(nActionList[i], fubenId, fubenConfig.sceneId)
      		
      		CommFubenPlayFuncs.sendNowStage(nActionList[i], fubenId, difficul, fbVar.commfubenplayfunc_var.now_stage, totalStage)
      		CommFubenPlayFuncs.sendKillBossNum(nActionList[i], fubenId, fbVar.commfubenplayfunc_var.kill_boss, totalBossNum)
      	end
 	else
 		LActor.enterFuBen(actorobj, fubenHandle, fubenConfig.sceneId, fubenConfig.position[1], fubenConfig.position[2])
		local scenePtr = LActor.getScenePtr(actorobj)
		Fuben.setDyanmicObstacleDataBySquare(scenePtr , -1, fubenConfig.blockArea)
	  	fubenbase.Init(actorobj, fubenId, fubenConfig.sceneId)

  		CommFubenPlayFuncs.sendNowStage(actorobj, fubenId, difficul, fbVar.commfubenplayfunc_var.now_stage, totalStage)
		CommFubenPlayFuncs.sendKillBossNum(actorobj, fubenId, fbVar.commfubenplayfunc_var.kill_boss, totalBossNum)
  	end
end

-- ================================ 注册事件 =================================
CommFubenPlayFuncs.registerAllEnterFuben()
CommFubenPlayFuncs.registerAllMonsterDeath()
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeOnActorDeath, CommFubenPlayFuncs.actorDeath)
EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeUserLogin, CommFubenPlayFuncs.actorLogin)