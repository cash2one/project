--lua script
--装备增强处理
--#include "data\language\LangCode.txt" once
--#include "data\config\item\itemEnhance\EquipEnhanceConfig.txt" once
--#include "data\functions\GlobalDefine.txt" once
--#include "data\config\item\itemEnhance\EnhanceQuest.txt" once
--#include "data\language\zh-cn\equipenhance.txt" once

-- 注释了一些判断条件方便测试

EnhanceTable = {}

EnhanceTable.StrongMax = 100 --15 新改为最高100级了
EnhanceTable.QualityMax = 7

-- 装备类型
EnhanceTable.EquipType = {
	-- 攻击装备类型
	[Item.itWeapon] = 0,
	--[Item.itNecklace] = 0,
	--[Item.itCuff] = 0,
	[Item.itDecorations] = 0,
	[Item.itRing] = 0,

	-- 防御装备类型
	[Item.itDress] = 1,
	[Item.itHelmet] = 1,
	--[Item.itGirdle] = 1,
	[Item.itTrousers] = 1,
--	[Item.itShoes] = 1,
}

EnhanceTable.SystemHB = {
	[1] = {22,37,43},
	[2] = {18,33,39},
	[3] = {17,32,38},
	[5] = {19,34,40},
	[6] = {20,35,41},
	[8] = {21,36,42},
}

EnhanceTable.shenzhuHB = {
	[1] = 26,
	[2] = 27,
	[3] = 28,
	[5] = 29,
	[6] = 30,
	[8] = 31,
}

EnhanceTable.baoshi = {
	[8] = 23,
	[9] = 24,
	[10] = 25,
	
}




EnhanceTable.stronglevelIndex = {80,90,100}

EnhanceTable.QualityName = {
	Lang.Enhance.qn001,
	Lang.Enhance.qn002,
	Lang.Enhance.qn003,
	Lang.Enhance.qn004,
	Lang.Enhance.qn005,
	Lang.Enhance.qn006,
	Lang.Enhance.qn007,
}

-- --初始化函数 配置改成exel导出 这里重新赋值一遍
-- function EnhanceTable.init(  )
	
-- 	EquipEnhance.upgrade = zzjinjieConfig
-- 	EquipEnhance.shenzhuConfig = zzshenzhuConfig
-- 	EquipEnhance.mixConfig = zzmixConfig
-- 	for k,v in pairs(zzrefreshConfig) do
-- 		EquipEnhance.refreshConfig[k] = v
-- 	end

-- 	EquipEnhance.strongConfig.moneyValue = zzqianghuahConfig.moneyValue
-- 	EquipEnhance.strongConfig.uplevelExp = zzqianghuahConfig.uplevelExp
	
-- end

--随机出一个索引
--@param randsTbale概论表
function EnhanceTable.getRandomIndex( randsTbale )
	local rands = System.getRandomNumber(100) + 1
	local sum = 0
	for i=1,#randsTbale do
		if rands <= randsTbale[i] + sum then
			return i
		end
		sum = sum + randsTbale[i]
	end
	return 0
end
--[[
function OnOpenDialog( sysarg )
	LActor.openDialogs( sysarg, diStrong )
end
]]

--装备镶嵌
EnhanceTable[1] = function( sysarg, args )
	LActor.OnQuestEvent(qtBaoshi, 0, 1, true, sysarg)

	if LevelOpenPlaySys.bs_xq_lvl > LActor.getLevel( sysarg ) then
		local tips = string.format( Lang.Enhance.t052, LevelOpenPlaySys.bs_xq_lvl)
		LActor.sendTipmsg( sysarg , tips, ttWarmTip)
		return false
	end
	print("------------fgfgyrh--111----------")
	local nguid = args[1]	--物品个数
	if nguid==nil or nguid < 2 or nguid > 4 then
		print( "equip insert gem guid count error:"..nguid )
		return false
	end
	local itemPtr = args[2]  --物品的指针
	if itemPtr == nil then
		print( "equip insert gem itemPtr is nil" )
		return false
	end

	local gemptr = args[3]  --宝石的指针
	if gemptr == nil then
		print( "equip insert gem itemPtr is nil" )
		return false
	end

	--是否可以打孔
	if not Item.getItemProperty( sysarg, itemPtr, Item.ipItemInlayable, 0 ) then
		LActor.sendTipmsg(sysarg, Lang.Enhance.t008, ttTipmsgWindow)
		return false, itemPtr
	end
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )	--获取物品类型
	if not EnhanceTable.IsCanStrongType( itemType ) then	--是否装备类型
		return false, itemPtr
	end

	--是否是宝石
	local gemItemType = Item.getItemProperty( sysarg, gemptr, Item.ipItemType, 0 )	--获取物品类型
	--if gemItemType ~= EnhanceTable.GemType then
		--return false, itemPtr
	--end

	--强化等级
	local strongLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemStrong, 0 )
	local holdNum = 0

	local strongLevels = EquipEnhance.gemStones.strongLevels
	for i=#strongLevels,1,-1 do
		if strongLevel >= strongLevels[i] then
			holdNum = i
			break
		end
	end

	--装备攻击防御类型
	local tp = EnhanceTable.EquipType[itemType]
	print("=======tp==============",tp)
	local stonesType = {}
	if tp == nil then
		print("现在的装备中没有这种类型的装备 请核对核对")
		return
	end
	if tp == 0 then --攻击
		stonesType = EquipEnhance.gemStones.strongTypeGJ
	elseif tp == 1 then --防御
		stonesType = EquipEnhance.gemStones.strongTypeFY
	else
		return false, itemPtr

	end
	
	-- 判断该宝石能否镶嵌
	local stoneTypeIndex = Item.getItemProperty( sysarg, gemptr, Item.ipItemDua, 0 )
	print("stoneTypeIndex=",stoneTypeIndex)
	local nFlags = false
	for k , v in pairs ( stonesType ) do
		if stoneTypeIndex == v then
			nFlags = true
			break
		end
	end
	if nFlags == false then
		--print("===================asdfadgf",stonesType[stoneTypeIndex])
		LActor.sendTipmsg(sysarg, Lang.Enhance.t019, ttTipmsgWindow)
		return false, itemPtr
	end

	--查找那个宝石位置可以嵌入
	local holdGemTable = { Item.ipItemHole1Item, Item.ipItemHole2Item, Item.ipItemHole3Item,Item.ipItemHole4Item } -- 镶嵌的孔对应的属性
	local holdPos = 0
	print("--------gemItemType-------------",gemItemType)
	local nItemAttrType = 0
	if gemItemType == 85 then
		local ngemitemid = Item.getItemProperty( sysarg , gemptr , Item.ipItemID , 0) 
		nItemAttrType = Item.getGemType( ngemitemid )
	end

	for i = 1 , holdNum do
		local mosaiced = Item.getItemProperty( sysarg, itemPtr, holdGemTable[i], 0 )
		local nCurGemType = Item.getGemType(mosaiced)
		if nCurGemType == nItemAttrType then
			LActor.sendTipmsg( sysarg , "已镶嵌有此类型的宝石" , ttWarmTip)
			return false, itemPtr
		end
	end
	for i=1,holdNum do
		--判断是否已经镶嵌了宝石
		local mosaiced = Item.getItemProperty( sysarg, itemPtr, holdGemTable[i], 0 )
		if ( mosaiced <= 0 ) then
			holdPos = i
			break
		end
	end
	if holdPos <=0 or holdPos > holdNum then
		return false, itemPtr
	end


	--for i=1, nparam do
	--local gemptr = args[3]   --宝石
	--local holdPos = args[2+nguid+i] --指定镶嵌的孔位置, 从1开始
	local gemId = Item.getItemProperty( sysarg, gemptr, Item.ipItemID, 0 )
	Item.setItemProperty( sysarg, itemPtr, holdGemTable[holdPos], gemId )
	if Item.getItemProperty(sysarg,gemptr,Item.ipItemBind,0) ~= 0 then	-- 如果宝石为镶嵌状态则装备也为绑定状态
		Item.setItemProperty(sysarg,itemPtr,Item.ipItemBind,1)
	end
	LActor.removeItemByPtr(sysarg,gemptr,1,true,"",306)
	--发送全服消息
	local equipId = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )
	-- if Item.getItemProperty( sysarg, gemptr, Item.ipItemSuitId, 0 ) >= 5 then -- ipItemSuitId表示宝石等级
		-- local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		--print(zy)
		
		-- local tipmsg = string.format( Lang.Enhance.t001, LActor.getName(sysarg), Item.getColorName(equipId), Item.getColorName(gemId) )	--阵营名称，玩家名字，装备名称，宝石名称
		-- System.broadcastTipmsg( tipmsg, ttScreenCenter )
		--System.broadcastTipmsg( tipmsg..Lang.Enhance.t042, ttHearsay)
	-- end
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_xiangqian", Item.getItemName(equipId), "", Item.getItemName(gemId), "", "", "", "", lfDB)
	--LActor.OnQuestEvent(qtDay, qtInsertGem, 1, true, sysarg, false)
	--end
	return true, itemPtr
end

--装备镶嵌摘除
EnhanceTable[2] = function( sysarg, args )
	local itemPtr = args[2]  --物品的指针
	local holdPos = args[4] --摘除的孔位置
	
		--强化等级
	local strongLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemStrong, 0 )
	local holdNum = 0
	local strongLevels = EquipEnhance.gemStones.strongLevels
	for i=#strongLevels,1,-1 do
		if strongLevel >= strongLevels[i] then
			holdNum = i
			break
		end
	end

	if holdPos<1 or holdPos>holdNum then
		print("equip remove hold error:"..holdPos)
		return false, itemPtr
	end

	-- 装备ID
	local itemId = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )
	
	local holdGemTable = { Item.ipItemHole1Item, Item.ipItemHole2Item, Item.ipItemHole3Item,Item.ipItemHole4Item }
	

	--是否可以打孔
	if not Item.getItemProperty( sysarg, itemPtr, Item.ipItemInlayable, 0 ) then
		LActor.sendTipmsg(sysarg, Lang.Enhance.t008, ttTipmsgWindow)
		return false, itemPtr
	end
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )	--获取物品类型
	if not EnhanceTable.IsCanStrongType( itemType ) then	--是否装备类型
		return false, itemPtr
	end

	-- --是否装备
	-- local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )
	-- if itemType < Item.itWeapon or itemType > Item.itEquipMax then
	-- 	LActor.sendTipmsg( sysarg, Lang.ScriptTips.q00022,ttMessage )
	-- 	return false, itemPtr
	-- end
	--从物品对应槽位身上取得已镶嵌宝石
	local hgp = holdGemTable[holdPos]
	local mosaiced = Item.getItemProperty( sysarg, itemPtr, hgp, 0 )
	if ( mosaiced <= 0 ) then
		LActor.sendTipmsg( sysarg, Lang.ScriptTips.q00023,ttMessage )
		return false, itemPtr
	end
	-- 判断是否有足够的金钱
	-- local needMoneyType = EquipEnhance.removeMoneyType
	-- local needMoney = EquipEnhance.removeMoney
	-- if LActor.getMoneyCount( sysarg, needMoneyType ) < needMoney then
	-- 	local tipmsg = string.format(Lang.Enhance.t018,MoneyName[needMoneyType+1])
	-- 	LActor.sendTipmsg(sysarg, tipmsg, ttMessage)
	-- 	return false, itemPtr
	-- end
	--[[能否添加判断，判断背包中是否有空的的格
	local bagCount = Item.getBagEmptyGridCount(sysarg)
	if bagCount < 1 then 
		--print( "背包空间不足，无法摘除宝石" )
		return false, itemPtr , Lang.Enhance.t053
	end]]
	--判断能否把摘除的物品添加到背包中
	if ( not LActor.canAddItem( sysarg, mosaiced, 1 ) ) then
		-- LActor.sendTipmsg( sysarg, Lang.ScriptTips.q00024,ttMessage )
		LActor.SendGeneralTips(sysarg, 7, 0, 0)
		return false, itemPtr
	end
	-- 扣除金钱
	--LActor.changeMoney( sysarg, needMoneyType, -needMoney, 1, true, "equip_strong", "remove")
	--摘除(设为0)
	Item.setItemProperty( sysarg, itemPtr, hgp, 0 )
	--把宝石添加到背包中
	LActor.addItem(sysarg,mosaiced,0,0,1,1, "", 32) --从装备上摘除的宝石全部为已绑定

	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_zhaichu", Item.getItemName(itemId), "", Item.getItemName(mosaiced), "", "", "", "", lfDB)
	return true, itemPtr
end

-- 是否装备类型
EnhanceTable.IsEquipType = function( itemType )
	return ( itemType >= Item.itWeapon and itemType < Item.itEquipMax )
end

-- 是否可以强化的类型
EnhanceTable.IsCanStrongType = function( itemType )
	return ( itemType >= Item.itWeapon and itemType <= Item.itShoes )
end

EnhanceTable.IsMountEquip = function( itemType )
	return ( itemType > Item.itMountEquipMin and itemType < Item.itMountEquipMax )
end

EnhanceTable.GetShangChengItem = function ( id_item)
	local items = GameStore[7].items
	for k,v in pairs(items) do
		if v.item == id_item then
			return v.id
		end
	end
	return -1
end

EnhanceTable.IsUpLevel = function ( addexp , nNeedUpLevelExp , levels)
	-- body
	--print(string.format("------isuplevel----addexp=%d----nNeedUpLevelExp=%d -------levels = %d ------",addexp,nNeedUpLevelExp,levels))
	local all_uplevelExp = EquipEnhance.strongConfig.uplevelExp
	local isSuccess

	local nCurExp = 0
	if addexp >= nNeedUpLevelExp then
		isSuccess = true
		addexp = addexp - nNeedUpLevelExp

		for i=levels+1,#all_uplevelExp do
			
			if i>#all_uplevelExp or addexp < all_uplevelExp[i] then
				break
			end
			addexp = addexp - all_uplevelExp[i]
			levels = levels + 1
		end
		nNeedUpLevelExp = addexp
		--nNeedUpLevelExp =  addexp
	else
		nNeedUpLevelExp = nNeedUpLevelExp - addexp
	end
	--如果不成功等级必须+1 传进来时 减了1
	-- if not isSuccess then
	-- 	levels = levels + 1
	-- end
	return nNeedUpLevelExp , levels ,isSuccess
end


EnhanceTable.OneKeyStrength = function ( sysarg , itemPtr , useItemId , autobuy)
	-- body
	--print("-----OneKeyStrength-------",nChoseItem,autobuy)
	LActor.OnQuestEvent(qtStrengthEquip, 0, 1, true, sysarg)

	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )
	if not EnhanceTable.IsCanStrongType( itemType ) then	--是否可以强化的装备类型
		return false, itemPtr, Lang.Enhance.t020
	end
	local enhanceLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemStrong, 0 )
	if ( enhanceLevel >= EnhanceTable.StrongMax ) then	--物品是否强化满级
		return false, itemPtr, Lang.Enhance.t011
	end


	local nextLevel = enhanceLevel + 1
	local nCurStrengCount = 0
	local uplevelExp = EquipEnhance.strongConfig.uplevelExp[nextLevel] --从配置文件获取升级需要的经验
	local nCurExp = Item.getItemProperty( sysarg, itemPtr,Item.ipItemStrongExp,0) --当前经验
	local nNeedUpLevelExp = uplevelExp - nCurExp -- 升级需要的经验

	local nNeedMoneyType = EquipEnhance.strongConfig.moneyType -- 获取强化需要消耗的货币类型
	local nCurMyConstMoney =  LActor.getMoneyCount(sysarg, nNeedMoneyType) --获得玩家共有 需要消耗的钱

	local nChoseItemcount = LActor.getItemCount( sysarg, useItemId ) --物品数量
	local nNeedMoney = EquipEnhance.strongConfig.moneyValue[nextLevel] --需要消耗的钱

	local nFlag = false
	local nEnoughMoneyFlag = true
	local nCurStrengCount = 0
	local itemIndex = 0
	local isSuccess
	--print("-------一键强化开始-------",uplevelExp,nCurExp,nNeedUpLevelExp,nNeedMoneyType,nCurMyConstMoney,nChoseItemcount,nNeedMoney,useItemId)
	for k , v in pairs ( EquipEnhance.strongConfig.strongItemId ) do
		if useItemId == v then --检测优先扣除的材料
			nFlag = true
			itemIndex = k
			break
		end
	end
	if nFlag == true then
		local nStrengCount = 0
		if math.floor(nCurMyConstMoney / nNeedMoney) > nChoseItemcount then
			nStrengCount = nChoseItemcount
			nEnoughMoneyFlag = false
		else
			nStrengCount = math.floor(nCurMyConstMoney / nNeedMoney)
		end
		--print("--------物品强化次数--------",nStrengCount)
		--强化次数
		for i = 1, nStrengCount do
			nCurStrengCount = nCurStrengCount + 1 --强化次数
			nCurMyConstMoney = nCurMyConstMoney - nNeedMoney
			--计算经验暴击
			local addExp = EquipEnhance.strongConfig.strongItemExp[itemIndex] -- 经验加成
			local rateIndex = EnhanceTable.getRandomIndex( EquipEnhance.strongConfig.strengthenProbability )
			if rateIndex <= 0 or rateIndex >#EquipEnhance.strongConfig.strengthenRate then
				rate = 1
			else
				rate = EquipEnhance.strongConfig.strengthenRate[rateIndex]
			end
			addExp = addExp*rate
			nNeedUpLevelExp , nextLevel ,isSuccess = EnhanceTable.IsUpLevel( addExp , nNeedUpLevelExp , nextLevel )
			if isSuccess == true then
				break
			end
		end
		--扣除物品
		if nCurStrengCount > 0 then
			LActor.removeItem(sysarg, useItemId, nCurStrengCount, -1, -1, -1, "equip_qianghua")
			-- 扣钱
			LActor.changeMoney(sysarg,nNeedMoneyType,-nNeedMoney * nCurStrengCount, 1, true, "equip_strong", "strong")
		end
	end

	--print("-----------------------",isSuccess,nEnoughMoneyFlag)
	if not isSuccess and nEnoughMoneyFlag == false then
		--[[print("-------其他物品强化------")
		for k , v in pairs ( EquipEnhance.strongConfig.strongItemId ) do
			if useItemId ~= v then --检测优先扣除的材料
				local nItemCount = LActor.getItemCount(sysarg,v)
				local nCurItemCount = nItemCount
				--print("------------",nItemCount,v)
				while ( nEnoughMoneyFlag == false and nItemCount > 0 )
					do

					if nCurMyConstMoney < nNeedMoney then
						nEnoughMoneyFlag = true
						break
					end
					nCurMyConstMoney = nCurMyConstMoney - nNeedMoney
					nItemCount = nItemCount - 1
					nCurStrengCount = nCurStrengCount + 1 --强化次数


					local addExp = EquipEnhance.strongConfig.strongItemExp[k] -- 经验加成
					local rateIndex = EnhanceTable.getRandomIndex( EquipEnhance.strongConfig.strengthenProbability )
					if rateIndex <= 0 or rateIndex >#EquipEnhance.strongConfig.strengthenRate then
						rate = 1
					else
						rate = EquipEnhance.strongConfig.strengthenRate[rateIndex]
					end

					addExp = addExp*rate

					nNeedUpLevelExp , nextLevel ,isSuccess = EnhanceTable.IsUpLevel( addExp , nNeedUpLevelExp , nextLevel )
					if isSuccess == true then
						break
					end
				end
				--扣除物品
				if nCurItemCount-nItemCount > 0 then
					LActor.removeItem(sysarg, v, nCurItemCount-nItemCount, -1, -1, -1, "equip_qianghua")
				end
			end
		end]]
	end
	--print("--------6666666666666------------",isSuccess,nEnoughMoneyFlag,autobuy)
	if isSuccess or  nEnoughMoneyFlag == true or ( nEnoughMoneyFlag == false and autobuy == 0 )then
		--处理结果
		if nCurStrengCount <= 0 and nEnoughMoneyFlag == true then
			return false, itemPtr, Lang.Enhance.t022, 1, nNeedMoneyType, 0
		elseif nCurStrengCount <= 0 then
			return false, itemPtr, Lang.Enhance.t012, 2, useItemId, 0
		end
		if not isSuccess then
			if nEnoughMoneyFlag == true or ( nEnoughMoneyFlag == false and autobuy == 0 ) then
				nCurExp = uplevelExp - nNeedUpLevelExp  
			end
		else
			nCurExp = nNeedUpLevelExp
		end
		local isBind = true
		if isBind then
			Item.setItemProperty( sysarg, itemPtr, Item.ipItemBind,1 )
		end
	else-- 判断是否有足够的强化石
		if autobuy == 0 then
			return false, itemPtr, Lang.Enhance.t012, 2, useItemId, 0
		else
			--购买材料
			--itemIndex = 
			local nNewItemId = EquipEnhance.strongConfig.strongItemId[1]
			--print("------自动购买材料-------",nNewItemId)
			local goodsId = EnhanceTable.GetShangChengItem(nNewItemId)
			local itemPrice = Item.getItemPrice(goodsId)
			--print(string.format("--------goodsId = %d----itemPrice = %d---",goodsId,itemPrice))
			if itemPrice <= 0 then
				return false, itemPtr
			end
			--print("-----材料费用------",itemPrice,goodsId)
			local needYuanbao = 0
			local nMyYuanbao = LActor.getMoneyCount(sysarg, mtYuanbao)
			local nYuanbaoCount = 0
			--print("========nYuanbaoCount===============",nMyYuanbao,nYuanbaoCount)
			while (nEnoughMoneyFlag == false)
				do

				if nCurMyConstMoney < nNeedMoney or nMyYuanbao < itemPrice then
					nEnoughMoneyFlag = true
					--print("----nCurStrengCount-------",nCurStrengCount)
					break
				end
				nCurStrengCount = nCurStrengCount + 1
				nYuanbaoCount = nYuanbaoCount + 1
				nMyYuanbao = nMyYuanbao - itemPrice
				nCurMyConstMoney = nCurMyConstMoney - nNeedMoney
				local addExp = EquipEnhance.strongConfig.strongItemExp[1] -- 经验加成
				local rateIndex = EnhanceTable.getRandomIndex( EquipEnhance.strongConfig.strengthenProbability )
				if rateIndex <= 0 or rateIndex >#EquipEnhance.strongConfig.strengthenRate then
					rate = 1
				else
					rate = EquipEnhance.strongConfig.strengthenRate[rateIndex]
				end
				addExp = addExp*rate
				nNeedUpLevelExp , nextLevel ,isSuccess = EnhanceTable.IsUpLevel( addExp , nNeedUpLevelExp , nextLevel)
				if isSuccess == true then
					break
				end
			end
			-- 扣钱
			if nYuanbaoCount > 0 then
				LActor.changeMoney(sysarg,nNeedMoneyType,-nNeedMoney* nCurStrengCount , 1, true, "equip_strong", "strong")
				LActor.changeMoney(sysarg, mtYuanbao, -itemPrice* nYuanbaoCount, 1, true, "equip_strong", "strong_autobuy")
			end
			--if nEnoughMoneyFlag == true then
			--	nCurExp = uplevelExp - nNeedUpLevelExp
			--end
		end
		if nCurStrengCount <= 0 then
			local tipmsg
			local hastype = 0
			if nCurMyConstMoney < nNeedMoney then
				tipmsg = string.format(Lang.Enhance.t018,MoneyName[nNeedMoneyType+1])
				hastype = nNeedMoneyType
			else
				tipmsg = string.format(Lang.Enhance.t018,MoneyName[mtYuanbao+1])
				hastype = mtYuanbao
			end
			
			return false, itemPtr, tipmsg, 1, hastype, 0
		end
		if isSuccess == true then
			nCurExp = nNeedUpLevelExp	
		else
			nCurExp = uplevelExp - nNeedUpLevelExp 
		end
	end
	--print("-------nCurExp--------",nCurExp)
	Item.setItemProperty( sysarg, itemPtr, Item.ipItemStrongExp, nCurExp , false)
	--Item.setItemProperty( sysarg, itemPtr, Item.ipItemBind,1 )
	local finalLevel
	if isSuccess then
		Item.setItemProperty( sysarg, itemPtr, Item.ipItemStrong, nextLevel ,false)
		finalLevel = nextLevel
	else
		--不够升一级时 提示的内容
	end

	local itemid = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )

	local aname = LActor.getAccountName(sysarg)
	local aid = LActor.getActorId(sysarg)
	if finalLevel ~= nil and finalLevel >= 5 then -- 最后等级大于等于5的记录日志
		System.logCounter(aid, aname, tostring(LActor.getLevel(sysarg)), "equip_strong", Item.getItemName(itemid), "", tostring(finalLevel), tostring(enhanceLevel))
	end
	-- BI
	System.logCounter(aid, aname, tostring(LActor.getLevel(sysarg)), "equip", tostring(finalLevel), "", "qianghua", "", "", "", "", lfBI)


	if isSuccess then
		--LActor.OnQuestEvent(qtDay, qtEquipStrength, 1, true, sysarg , false)
		--发布全服世界公告
		local stronglevel = nextLevel
		local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		local name = LActor.getName(sysarg)
		local itemId = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )
		local equipname = Item.getColorName(itemId)
		-- if itemType==Item.itWeapon then
		-- 	if stronglevel >= 9 then
		-- 		local tipmsg = string.format(Lang.Enhance.t003,CampColor[zy],CampShortName[zy],name,equipname, stronglevel)
		-- 		System.broadcastTipmsg(tipmsg,ttScreenCenter)
		-- 		System.broadcastTipmsg(tipmsg..Lang.Enhance.t044,ttHearsay)
		-- 	end
		-- elseif stronglevel >= 7 then
		-- 	local tipmsg = string.format(Lang.Enhance.t002,CampColor[zy],CampShortName[zy],name,equipname,stronglevel)
		-- 	System.broadcastTipmsg(tipmsg,ttScreenCenter)
		-- 	System.broadcastTipmsg(tipmsg..Lang.Enhance.t044,ttHearsay)
		-- end
		local index = 0
		for i = 1, #EnhanceTable.stronglevelIndex do
			if stronglevel == EnhanceTable.stronglevelIndex[i] then
				index = i
			end
		end
		--print("+============>>>>>>>>"..index)
		if index ~= 0 then
			local hongbaoid = EnhanceTable.SystemHB[itemType][index]
		--	print("===============>>>>>>>>>>红包id"..EnhanceTable.SystemHB[itemType][index])
			qianghongbao.SystemHB(sysarg, hongbaoid, 0)
		end

		--处理强化任务
		for i = 1, #StrongQuest do
			local quest = StrongQuest[i]
			if (quest.iid == 0 or quest.iid == itemId) and stronglevel >= quest.value then
				LActor.setQuestValue(sysarg, quest.qid, quest.tid, quest.count)
			end
		end
	end
	Item.NotifyItemAttrChage(sysarg , itemPtr)

	LActor.OnQuestEvent(36, 0, 1, true, sysarg , false)
	-- 活跃度
	ActivationTrigger(sysarg, 8, nCurStrengCount)
	return true, itemPtr
end
--强化装备
EnhanceTable[3] = function( sysarg, args )
	LActor.OnQuestEvent(qtStrengthEquip, 0, 1, true, sysarg)
	
	if LevelOpenPlaySys.zz_qh_lvl > LActor.getLevel( sysarg ) then
		local tips = string.format( Lang.Enhance.t048, LevelOpenPlaySys.zz_qh_lvl)
		LActor.sendTipmsg( sysarg , tips, ttWarmTip)
		return false
	end
	local nguid = args[1] --物品个数
	if not ( nguid == 1 or nguid==2 or nguid==3 ) then
		print( "equip strong item ptr count error:" )
		return false
	end
	local itemPtr = args[2]  --装备的指针

	local oneKeyUpLevel = args[6]

	if oneKeyUpLevel == 1 then
		--一键强化 actor 物品指针 选择的物品 是否自动购买物品
		return EnhanceTable.OneKeyStrength(sysarg,itemPtr,args[4],args[5])
	end

	--判断装备能否强化
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )
	if not EnhanceTable.IsCanStrongType( itemType ) then	--是否可以强化的装备类型
		return false, itemPtr, Lang.Enhance.t020
	end
	local enhanceLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemStrong, 0 )
	if ( enhanceLevel >= EnhanceTable.StrongMax ) then	--物品是否强化满级
		return false, itemPtr, Lang.Enhance.t011
	end

	--物品ID对不对
	local useItemId = args[4]
	local itemIndex = 0
	local strongItemId = EquipEnhance.strongConfig.strongItemId
	for i=1,#strongItemId do
		if strongItemId[i] == useItemId then
			itemIndex = i
			break
		end
	end

	if itemIndex == 0 then
		return false
	end

	local autobuy = args[5]

	-- 判断是否有足够的强化石
	local needYuanbao = 0
	local removeItemId = 0
	local useItemCount = LActor.getItemCount( sysarg, useItemId )
	if useItemCount < 1 then
		if autobuy == 0 then
			return false, itemPtr, Lang.Enhance.t012, 2, useItemId, 1
		else
			local goodsId = EnhanceTable.GetShangChengItem(useItemId)
			local itemPrice = Item.getItemPrice(goodsId)
			if itemPrice <= 0 then
				return false, itemPtr
			end
			needYuanbao = needYuanbao + itemPrice
		end
	else
		removeItemId = useItemId 
	end

	local addExp = EquipEnhance.strongConfig.strongItemExp[itemIndex] -- 经验加成
	
	--铜钱消耗计算
	local needMoneyType = EquipEnhance.strongConfig.moneyType
	-- local strongMoneyIndex = 1
	-- for i=1,#EquipEnhance.strongConfig.moneyLevel do
	-- 	local  moneyLevel = EquipEnhance.strongConfig.moneyLevel[i]
	-- 	if enhanceLevel <= moneyLevel then
	-- 		strongMoneyIndex = i
	-- 		break
	-- 	end
	--end
	--配置从1开始 数据0开始
	local needMoney = EquipEnhance.strongConfig.moneyValue[enhanceLevel+1] 

	--判断是否有足够的金钱
	local hasmoney = LActor.getMoneyCount(sysarg, needMoneyType)
	if hasmoney < needMoney then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[needMoneyType+1])
		return false, itemPtr, tipmsg, 1, needMoneyType, needMoney-hasmoney
	end
	local hasyuanbao = LActor.getMoneyCount(sysarg, mtYuanbao)
	if hasyuanbao < needYuanbao then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[4])
		return false, itemPtr, tipmsg, 1, mtYuanbao, needYuanbao-hasyuanbao
	end

	--计算经验暴击
	local rateIndex = EnhanceTable.getRandomIndex( EquipEnhance.strongConfig.strengthenProbability )
	local rate = 1 --倍率
	if rateIndex <= 0 or rateIndex >#EquipEnhance.strongConfig.strengthenRate then
		rate = 1
	else
		rate = EquipEnhance.strongConfig.strengthenRate[rateIndex]
	end
	addExp = addExp*rate

	--处理消耗
	if needMoney > 0 then
		LActor.changeMoney(sysarg,needMoneyType,-needMoney, 1, true, "equip_strong", "strong")
	end
	if needYuanbao > 0 then
		LActor.changeMoney(sysarg, mtYuanbao, -needYuanbao, 1, true, "equip_strong", "strong_autobuy")
	end
	--删除物品
	if removeItemId > 0 then
		LActor.removeItem(sysarg, removeItemId, 1, -1, -1, -1, "equip_qianghua")
	end

	-- 处理绑定状态
	local isBind = true
	if isBind then
		Item.setItemProperty( sysarg, itemPtr, Item.ipItemBind,1 ,false)
	end

	--修改属性 --配置从1开始 数据0开始

	local uplevelExp = EquipEnhance.strongConfig.uplevelExp[enhanceLevel+1] --从配置文件获取升级需要的经验
	local currExp = Item.getItemProperty( sysarg, itemPtr, Item.ipItemStrongExp, 0 )
	local isSuccess = false 	--装备够经验升级了
	local sumExp = currExp + addExp

	-- local cur_level = enhanceLevel
	-- local function up_level( enhanceLevel )
	-- 	local uplevelExp = EquipEnhance.strongConfig.uplevelExp[enhanceLevel+1]
	-- 	sumExp = currExp + addExp
	-- end 
	local all_uplevelExp = EquipEnhance.strongConfig.uplevelExp
	--print("强化结果：sumExp="..sumExp.."currExp= "..currExp.."addExp= "..addExp.."rate= "..rate)

	local nextLevel = enhanceLevel	-- 下一个强化等级
	if sumExp >= uplevelExp then
		isSuccess = true
		for i=enhanceLevel+1,#all_uplevelExp do
			currExp = sumExp - all_uplevelExp[i]
			nextLevel = nextLevel + 1
			if i>=#all_uplevelExp or currExp < all_uplevelExp[i+1] then
				break
			end
			sumExp = currExp
		end
	else
		currExp = sumExp
	end

	Item.setItemProperty( sysarg, itemPtr, Item.ipItemStrongExp, currExp , false)
	--强化等级结果
	local finalLevel
	if isSuccess then
		Item.setItemProperty( sysarg, itemPtr, Item.ipItemStrong, nextLevel ,false)
		finalLevel = nextLevel
	-- else
	-- 	if protPtr == nil and enhanceLevel > 0 and autopro == 0 then	--没有使用强化保护符，掉级
	-- 		Item.setItemProperty( sysarg, itemPtr, Item.ipItemStrong, enhanceLevel-1 )	-- 强化失败
	-- 		finalLevel = enhanceLevel - 1
	-- 	end
	-- 	--if protPtr ~= nil or autopro ~= 0 then -- 使用保护符才增加祝福值
	-- 	--	Item.setItemProperty(sysarg, itemPtr, Item.ipItemDua, nbless+1) -- 失败，祝福值加1
	-- 	--end
	end

	local itemid = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )

	local aname = LActor.getAccountName(sysarg)
	local aid = LActor.getActorId(sysarg)
	if finalLevel ~= nil and finalLevel >= 5 then -- 最后等级大于等于5的记录日志
		System.logCounter(aid, aname, tostring(LActor.getLevel(sysarg)), "equip_strong", Item.getItemName(itemid), "", tostring(finalLevel), tostring(enhanceLevel))
	end
	-- BI
	System.logCounter(aid, aname, tostring(LActor.getLevel(sysarg)), "equip", tostring(itemid),tostring(enhanceLevel),tostring(finalLevel), "qianghua", tostring(LActor.getName(sysarg)), "", "", lfDB)

	if isSuccess then
		--发布全服世界公告
		--LActor.OnQuestEvent(qtDay, qtEquipStrength, 1, true, sysarg , false)
		local stronglevel = nextLevel
		local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		local name = LActor.getName(sysarg)
		local itemId = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )
		local equipname = Item.getColorName(itemId)
		-- if itemType==Item.itWeapon then
		-- 	if stronglevel >= 9 then
		-- 		--local tipmsg = string.format(Lang.Enhance.t003,CampColor[zy],CampShortName[zy],name,equipname, stronglevel)
		-- 		--System.broadcastTipmsg(tipmsg,ttScreenCenter)
		-- 		--System.broadcastTipmsg(tipmsg..Lang.Enhance.t044,ttHearsay)
		-- 	end
		-- elseif stronglevel >= 7 then
		-- 	local tipmsg = string.format(Lang.Enhance.t002,CampColor[zy],CampShortName[zy],name,equipname,stronglevel)
		-- 	System.broadcastTipmsg(tipmsg,ttScreenCenter)
		-- 	System.broadcastTipmsg(tipmsg..Lang.Enhance.t044,ttHearsay)
		-- end

		--处理强化任务
		for i = 1, #StrongQuest do
			local quest = StrongQuest[i]
			if (quest.iid == 0 or quest.iid == itemId) and stronglevel >= quest.value then
				LActor.setQuestValue(sysarg, quest.qid, quest.tid, quest.count)
			end
		end
	end
	Item.NotifyItemAttrChage(sysarg, itemPtr)
	LActor.OnQuestEvent(36, 0, 1, true, sysarg , false)
	-- 活跃度
	ActivationTrigger(sysarg, 8)	
	return true, itemPtr
end

--获取物品配置，同时可以检查传人的类型是否合法
EnhanceTable.GetItemConfig = function( syarg, mainType, subType, level )
	if mainType<1 or mainType >3 then
		return nil
	end
	local item = EquipEnhance.MainTypes[mainType]
	if subType > 0 then
		if subType<1 or subType>#item.subTypes then
			return nil
		end
		item = item.subTypes[subType]
	end
	if level<1 or level>#item.levels then
		return nil
	end
	return item.levels[level]
end

-- 物品合成
EnhanceTable[4] = function( sysarg, args )
	local nguid = args[1]	--guid个数
	--print( "nguid:"..nguid )
	if nguid < 1 or nguid > 100 then --防止错误参数
		print( "mix guid count error:"..nguid )
		return false
	end

	local totalMix = args[2+nguid+1];
	--print("totalMix "..totalMix)
	if totalMix < 1 or totalMix > 10000 then
		print( "mix count param error:"..totalMix )
		return false
	end

	local itemPtr = args[2]

	--for i=2, 1+nguid do
	--	print("args[i]", args[i])
	--end
	
	-- 处理合成物品属性
	local totalBind, totalNoBind = 0, 0
	local items = {}
	local itemId = 0
	local ipos = 1 --绑定物品的插入位置，先绑定物品，再非绑定物品
	local guidlistCheck = {}
	for i=2, 1+nguid do
		local thisItem = {}
		thisItem.ptr = args[i]
		for i,v in ipairs(guidlistCheck) do
			if v == thisItem.ptr then
				return false
			end
		end
		table.insert(guidlistCheck, thisItem.ptr)
		thisItem.count = Item.getItemProperty( sysarg, args[i], Item.ipItemCount, 0 )
		thisItem.time = Item.getItemProperty(sysarg, args[i], Item.ipItemExpiredTime, 0)
		if thisItem.count <= 0 then -- 物品数量错误
			return false, nil, Lang.Enhance.t045
		end
		thisItem.leftCount = thisItem.count
		if itemId == 0 then
			itemId = Item.getItemProperty( sysarg, args[i], Item.ipItemID, 0 )
		elseif Item.getItemProperty( sysarg, args[i], Item.ipItemID, 0 ) ~= itemId then --不同物品不能合成
			return false, nil, Lang.Enhance.t039
		end
		if Item.getItemProperty(sysarg,args[i],Item.ipItemBind,0) ~= 0 then
			thisItem.bind = true
			table.insert( items, ipos, thisItem )
			totalBind = totalBind + thisItem.count
			ipos = ipos + 1
			--print( "bind" )
		else
			thisItem.bind = false
			table.insert( items, thisItem )
			totalNoBind = totalNoBind + thisItem.count
			--print( "no bind" )
		end
	end

	local addmode = 1
	--if itemId == 11700 then addmode = 2 end -- 棒棒糖特殊处理

	--print( "item count:"..#items )

	--print( "start mix item:"..itemId )
	-- local mixIndex = 0
	-- for i=1, #EquipEnhance.mixItemId do
	-- 	if EquipEnhance.mixItemId[i] == itemId then
	-- 		mixIndex = i
	-- 		break
	-- 	end
	-- end
	local mixConfig = EquipEnhance.mixConfig[itemId]
	if not mixConfig  then
		LActor.sendTipmsg( sysarg, Lang.Enhance.t040, ttMessage )
		return false
	end
	local newItemId = mixConfig.newItems
	local needMoney = mixConfig.money
	local needCount = mixConfig.Count

	if not newItemId then return end
	if not needMoney then return end
	if not needCount then return end

	--是否有足够的物品合成需要的次数

	--print("needCount: "..needCount)
	--print("totalBind: "..totalBind)
	--print("totalNoBind: "..totalNoBind)
	--print("totalMix: "..totalMix)

	if tonumber(nguid) >= 11 then --大于11组重新计算
		totalMix = math.floor((totalBind + totalNoBind)/needCount)
		if totalMix < 1 or totalMix > 10000 then
			print( "mix count param error:"..totalMix )
			return false
		end
	end

	--print("totalMix: "..totalMix)
	
	if needCount * totalMix > totalBind + totalNoBind then
		return false, nil, Lang.Enhance.t041
	end
	--是否有足够的金钱
	local moneyType = mtBindCoin
	needMoney = needMoney * totalMix
	local hasbindcoin = LActor.getMoneyCount( sysarg, mtBindCoin )
	if hasbindcoin < needMoney then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[moneyType+1])
		return false, nil, tipmsg, 1, mtBindCoin, needMoney-hasbindcoin
	end

	-- 处理物品合成
	local mixBind = 0 --合成非绑定物品的个数
	local mixNoBind = 0 --合成绑定物品的个数
	local total = #items
	local index = 1
	local loop = 0 -- 限制次数，防止死循环
	while index <= total and mixBind + mixNoBind < totalMix do
		loop = loop + 1
		if loop > 1000 then print("equip loop max") return false end
		local leftCount = needCount -- 合成一件物品还需要的物品数量
		local isBind = false
		local loop2 = 0
		while leftCount > 0 and index <= total do -- 合成一件物品
			loop2 = loop2 + 1
			if loop2 > 1000 then print("equip loop2 max") return false end
			local thisItem = items[index]
			if thisItem.leftCount > 0 then
				if thisItem.bind then isBind = true end --处理绑定
				if thisItem.leftCount >= leftCount then
					thisItem.leftCount = thisItem.leftCount - leftCount
					leftCount = 0
					--print(thisItem.leftCount)
					if thisItem.leftCount <= 0 then -- 这个物品用完了，下一个
						index = index + 1
					end
					break 
				else
					leftCount = leftCount - thisItem.leftCount
					thisItem.leftCount = 0
				end
				index = index + 1
			end
		end
		if leftCount <= 0 then -- 这个物品合成了
			if isBind then
				mixBind = mixBind + 1
			else
				mixNoBind = mixNoBind + 1
			end
		end

		--print("mixBind:"..mixBind)
		--print("mixNoBind:"..mixNoBind)
	end

	--判断能否添加合成品
	if ( (mixBind>0) and (not LActor.canAddItem(sysarg,newItemId,mixBind,0,0,true )) ) then	--新绑定物品
		LActor.SendGeneralTips(sysarg, 7, 0, 0)
		-- return false, nil, Lang.Enhance.t043
		return false, nil, ""
	end
	if ( (mixNoBind>0) and (not LActor.canAddItem(sysarg,newItemId,mixNoBind,0,0,false )) ) then	--新非绑定物品
		LActor.SendGeneralTips(sysarg, 7, 0, 0)
		-- return false, nil, Lang.Enhance.t043
		return false, nil, ""
	end
	--扣除金钱
	LActor.changeMoney( sysarg, moneyType, -needMoney, 1, true,  "equip_strong", "composite" )
	--处理物品消耗和生成
	for i = 1, #items do
		local thisItem = items[i]
		local mix = thisItem.count - thisItem.leftCount
		if mix > 0 then
			Item.removeItem( sysarg, thisItem.ptr, mix, "", 0 )
		end
	end

	local addidx = 1
	if mixBind > 0 then --新绑定物品数
		if addmode == 1 then
			LActor.addItem(sysarg,newItemId,0,0,mixBind,1, "", 33)
			print("")
		else
			local guid= 0
			for i=1,mixBind do
				local tm = items[addidx].time
				for j=1,needCount-1 do
					local mt = items[addidx + j].time
					if mt > tm then
						tm = mt
					end
				end
				addidx = addidx + needCount
				local count,guid = LActor.addItemRetGuid(sysarg, newItemId, 0, 0, 1, 1, guid, "", 33)
				if count > 0 and guid ~= nil then
					local itemPtr = Item.getBagItemPtrByGuid(sysarg, guid)
					if itemPtr ~= nil then
						Item.setItemProperty(sysarg, itemPtr, Item.ipItemExpiredTime, tm)
					end
				end
			end
		end
		--print("mixBind:"..mixBind)
	end
	if mixNoBind > 0 then --新非绑定物品数
		if addmode == 1 then
			LActor.addItem(sysarg,newItemId,0,0,mixNoBind,0, "", 33)
		else
			local guid= 0
			for i=1,mixNoBind do
				local tm = items[addidx].time
				for j=1,needCount-1 do
					local mt = items[addidx + j].time
					if mt > tm then
						tm = mt
					end
				end
				addidx = addidx + needCount
				local count,guid = LActor.addItemRetGuid(sysarg, newItemId, 0, 0, 1, 0, guid, "", 33)
				if count > 0 and guid ~= nil then
					local itemPtr = Item.getBagItemPtrByGuid(sysarg, guid)
					if itemPtr ~= nil then
						Item.setItemProperty(sysarg, itemPtr, Item.ipItemExpiredTime, tm)
					end
				end
			end
		end
		--print("mixNoBind:"..mixNoBind)
	end
	local newitemPtr =  Item.getItemById(sysarg, newItemId,  0)
	local itemType = Item.getItemProperty( sysarg, newitemPtr, Item.ipItemType, 0 )	--获取物品类型
	local newlevel = Item.getItemProperty( sysarg, newitemPtr, Item.ipItemSuitId, 0 )
	local hongbaoid = EnhanceTable.baoshi[newlevel]

	if itemType == Item.itItemDiamond then
		if hongbaoid ~= nil and hongbaoid > 0 then
			qianghongbao.SystemHB(sysarg,hongbaoid,1)
		end
	end

	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_hecheng", Item.getItemName(newItemId), "", tostring(mixBind).."_"..tostring(mixNoBind), "", "", "", "", lfDB)
	--LActor.OnQuestEvent(qtDay, qtSyntheticMaterial, 1, true, sysarg, false)
	return true, newitemPtr
end

-- 强化转移
EnhanceTable[5] = function( sysarg, args )
	--屏蔽强化转移功能
	if true then return end

	local srcPtr = args[2]	--源物品的指针
	local dstPtr = args[3]	--目标物品的指针
	
	--物品合法性检查
	local srcItemType = Item.getItemProperty( sysarg, srcPtr, Item.ipItemType, 0 )	--必须是装备类型
	local dstItemType = Item.getItemProperty( sysarg, dstPtr, Item.ipItemType, 0 )
	if (not EnhanceTable.IsEquipType( srcItemType )) or ( not EnhanceTable.IsEquipType( dstItemType ) ) then
		local tipmsg = string.format( Lang.Enhance.t021, srcItemType, dstItemType )
		return false, srcPtr, tipmsg
	end
	local srcEnhanceLevel = Item.getItemProperty( sysarg, srcPtr, Item.ipItemStrong, 0 )	--只能高级向低级转
	local dstEnhanceLevel = Item.getItemProperty( sysarg, dstPtr, Item.ipItemStrong, 0 )
	if srcEnhanceLevel <=0 or dstEnhanceLevel <0 or srcEnhanceLevel <= dstEnhanceLevel then
		return false, srcPtr, Lang.Enhance.t017
	end
	--是否有足够的金钱
	local needMoneyType = EquipEnhance.strengthenShiftMoneyType
	local needMoney = EquipEnhance.strengthenShiftMoney[srcEnhanceLevel];
	local hasmoney = LActor.getMoneyCount( sysarg, needMoneyType )
	if hasmoney < needMoney then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[needMoneyType+1])
		return false, srcPtr, tipmsg, 1, needMoneyType, needMoney-hasmoney
	end
	--扣除金钱
	LActor.changeMoney( sysarg, needMoneyType, -needMoney, 1, true, "equip_strong", "strong_move" )
	--设置转移结果
	Item.setItemProperty( sysarg, srcPtr, Item.ipItemStrong, 0 )
	Item.setItemProperty( sysarg, dstPtr, Item.ipItemStrong, srcEnhanceLevel )

	--绑定状态
	if Item.getItemProperty(sysarg,srcPtr,Item.ipItemBind,0) ~= 0 and Item.getItemProperty(sysarg,dstPtr,Item.ipItemBind,0) == 0 then
		Item.setItemProperty(sysarg,dstPtr,Item.ipItemBind,1)
	end

	return true, srcPtr
end

-- 属性值表
-- attrs:属性列表
-- isFree : 是否免费洗炼，免费洗炼不会随机到橙色区间，即最后那个区间
-- 失败返回0
EnhanceTable.GetRandomAttrValue=function( attrCfg, isFree )
	-- 随机获取值区间
	local secList = attrCfg.values	--值区间
	if #secList <= 0 then
		--print( "洗炼属性的值区间不能为空:"..attrCfg.type )
		return 0
	end
	local secCount = #secList
	if isFree then	-- 免费洗炼不会随机到橙色区间
		secCount = secCount - 1
	end

	local props = EquipEnhance.refreshRandProb
	local nsec = #props
	local ntotal = 1000
	if isFree then
		nsec = nsec - 1
		ntotal = ntotal - props[#props]
	end

	local nvalue = 1 -- 第几个区间
	local hit = System.getRandomNumber(ntotal)
	local total = 0
	for i=1,nsec do
		total = total + props[i]
		if hit < total then
			nvalue = i
			break
		end
	end
	local values = secList[nvalue]

	--print("nvalue:"..nvalue)

	-- 随机获取值
	if #values < 0 then
		--print( "洗炼属性区间下的值不能为空:"..attrCfg.type )
		return 0
	elseif #values == 1 then	--只有一个值，不用随机
		return attrCfg.type, values[1]
	end
	local val = values[System.getRandomNumber(#values)+1]	--随机一个值
	
	return attrCfg.type, val
end

--激活装备洗炼属性
EnhanceTable[6] = function( sysarg, args )
	--暂时屏蔽洗练激活功能
	if true then 
		return
	end

	local itemPtr = args[2] --装备指针
	
	-- 判断装备等级，类型
	local itemActorLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemActorLevel, 0 )
	if itemActorLevel < 40 then
		--print( "装备等级不足，无法进行装备洗炼  "..itemActorLevel )
		return false, itemPtr, Lang.Enhance.t026
	end
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )
	if not EnhanceTable.IsEquipType( itemType ) then
		--print( "不是装备类型:"..itemType )
		return false, itemPtr, Lang.Enhance.t025
	end
	--判断玩家等级,50级以上
	local playerLevel = LActor.getIntProperty( sysarg, PROP_LEVEL )
	if playerLevel < 50 then
		--print("玩家等级不足，无法进行装备洗炼:  "..playerLevel)
		return false, itemPtr, Lang.Enhance.t027
	end
	
	local activeCount = Item.getItemProperty(sysarg,itemPtr,Item.ipItemBaptizeActive,0) --激活个数
	if activeCount >= 3 then -- 所有洗炼属性已经激活
		--print( "洗炼属性已经激活  " )
		return false, itemPtr
	end
	activeCount = activeCount + 1
	--是否有足够的金钱
	local needMoneyType = EquipEnhance.activateMoneyType
	local needMoney = EquipEnhance.activateMoney[activeCount]
	local hasmoney = LActor.getMoneyCount(sysarg,needMoneyType)
	if hasmoney<needMoney then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[needMoneyType+1])
		return false, itemPtr, tipmsg, 1, needMoneyType, needMoney-hasmoney
	end
	--扣除金钱
	LActor.changeMoney(sysarg,needMoneyType,-needMoney, 1, true,  "equip", "active_xilian")
	--设为绑定状态
	if Item.getItemProperty(sysarg,itemPtr,Item.ipItemBind,0) == 0 then
		Item.setItemProperty(sysarg,itemPtr,Item.ipItemBind,1)
	end
	--洗炼一条属性
	local activeAttr = {}	-- 取出已经激活的属性的类型
	for i=1, activeCount-1 do
		activeAttr[i] = Item.getBaptizeProperty(itemPtr,i)
	end
	local attrs = EquipEnhance.refreshAttrs
	local idxs = {}	-- 属性类型序号
	for i=1, #attrs do
		local isActive = false
		for j=1, #activeAttr do	--判断该属性是否已经激活
			if attrs[i].type == activeAttr[j] then
				isActive = true
				break
			end
		end
		if not isActive then
			table.insert(idxs,i)
		end
	end
	local irand = System.getRandomNumber(#idxs) + 1	-- 随机一条属性的索引
	local idx = idxs[irand]
	local attr, val = EnhanceTable.GetRandomAttrValue( attrs[idx], true )
	Item.setBaptizeProperty( sysarg, itemPtr, activeCount, attr, val )	-- 设置洗炼属性值，同时会激活
	--LActor.OnQuestEvent(qtDay, qtEquipWashs, 1, true, sysarg, false)
	return true, itemPtr
end

--装备洗炼 
EnhanceTable[7] = function( sysarg, args )
	if LevelOpenPlaySys.zb_xl_lvl > LActor.getLevel( sysarg ) then
		local tips = string.format( Lang.Enhance.t050, LevelOpenPlaySys.zb_xl_lvl)
		LActor.sendTipmsg( sysarg , tips, ttWarmTip)
		return
	end

	LActor.OnQuestEvent(qtXilian, 0, 1, true, sysarg)
	
	local itemPtr = args[2]	--装备的指针
	local autobuy = args[4] --是否自动购买
	local lockFlags = { (args[5]==1), (args[6]==1), (args[7]==1),(args[8]==1) }	--是否锁定
	
	--判断系统开启
	
	--判断是否是装备
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )
	if not EnhanceTable.IsEquipType( itemType ) then
		return false, itemPtr, Lang.Enhance.t025
	end

	--判断品质 是否有洗练材料
	local nquality = Item.getItemProperty( sysarg, itemPtr, Item.ipItemColor, 0 )
	--nquality = 3
	maxLockAttr = 4
	if nquality < 2 or nquality > 5 then
		return false, itemPtr, Lang.Enhance.t025
	elseif nquality == 2 then
		maxLockAttr = 3
	-- elseif nquality > 2 and nquality <= 5 then
	-- 	maxLockAttr = 4
	end
	
	local needItemId = EquipEnhance.refreshConfig.refreshItem[nquality+1]

	if not needItemId or needItemId <= 0 then
		return false, itemPtr
	end

	--处理锁定属性
	local nLockAttr = 0
	if lockFlags[1] then nLockAttr = nLockAttr + 1 end
	if lockFlags[2] then nLockAttr = nLockAttr + 1 end
	if lockFlags[3] then nLockAttr = nLockAttr + 1 end
	if lockFlags[4] then nLockAttr = nLockAttr + 1 end
	if nLockAttr >= maxLockAttr then
		return false, itemPtr, Lang.Enhance.t007
	end
	--获取铜钱消耗
	--local moneyType = EquipEnhance.refreshConfig.refreshMoneyType
	local money =  EquipEnhance.refreshConfig.refreshMoney[nquality+1]
	local needYuanbao = 0

	--获取材料

	local useItemId = needItemId -- 是否有足够的材料
	local needItemCount = EquipEnhance.refreshConfig.refreshItemCount[nquality+1]
	local useItemCount = LActor.getItemCount( sysarg, useItemId )

	if  useItemCount < needItemCount then
		if autobuy == 0 then
			return false, nil, Lang.Enhance.t047, 2, useItemId, needItemCount-useItemCount
		end
		--如果自动购买
		local goodsId = EnhanceTable.GetShangChengItem(useItemId)
		local itemPrice = Item.getItemPrice(goodsId)
		if itemPrice <= 0 then
			return false, itemPtr
		end
		needYuanbao = needYuanbao + itemPrice*(needItemCount - useItemCount)
	else
		useItemCount = needItemCount
	end

	local lockItemId = EquipEnhance.refreshConfig.lockItem
	local lockItemCount = LActor.getItemCount( sysarg, lockItemId )
	--判断锁定材料够不够
	if nLockAttr > 0  then -- 大于0小于4,付费洗炼时,锁定属性才需要付费
		if lockItemCount < nLockAttr then
			if autobuy == 0 then
				return false, nil, Lang.Enhance.t047, 2, lockItemId, nLockAttr-lockItemCount
			end
			needYuanbao = needYuanbao + EquipEnhance.refreshConfig.lockMoney*(nLockAttr-lockItemCount) -- 加上锁定属性附加的金钱
		else
			lockItemCount = nLockAttr
		end
	else
		lockItemCount = 0
	end

	local hasyuanbao = LActor.getMoneyCount(sysarg, mtYuanbao)
	if hasyuanbao < needYuanbao then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[4])
		return false, itemPtr, tipmsg, 1, mtYuanbao, needYuanbao-hasyuanbao
	end

	-- 扣除金钱
	if money > 0 then
		local hasbindcoin = LActor.getMoneyCount(sysarg,mtBindCoin)
		if hasbindcoin < money then
			local tipmsg = string.format(Lang.Enhance.t018,MoneyName[mtBindCoin+1])
			return false, itemPtr, tipmsg, 1, mtBindCoin, money-hasbindcoin
		end
	end


	-- 取出已经锁定的属性的类型
	local lockAttrs = {}	
	for i=1, #lockFlags do
		if lockFlags[i] then
			local lockType = Item.getBaptizeProperty(itemPtr,i)
			lockAttrs[lockType] = true
		end
	end
	--取出未锁定属性及概率
	local attrTypesIndex = {}
	local refreshTypeReta = {}
	local attrTypeConfig = EquipEnhance.refreshConfig.refreshType
	local TypeRetaConfig = EquipEnhance.refreshConfig.refreshTypeReta
	for i=1,#attrTypeConfig do
		if not lockAttrs[attrTypeConfig[i]] then  --如果没有锁定
			table.insert(attrTypesIndex,i)
			table.insert(refreshTypeReta,attrTypeConfig[i] or 0)
		end
	end

	--洗练等级
	local xilianLevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemXilianLevel, 0 )

	if xilianLevel <= 0 then
		return false,itemPtr
	end

	--随机出属性
	local needRandNumb = maxLockAttr - nLockAttr
	local randAttrValue = {}
	local randAttrType = {}
	local nfull = 0 -- 满属性条数

	for i=1,needRandNumb do
		local rateIndex = EnhanceTable.getRandomIndex( refreshTypeReta )
		if rateIndex <= 0 and rateIndex > #attrTypesIndex then
			return false, itemPtr
		end
		local attrIndex = attrTypesIndex[rateIndex]
		randAttrType[i] = attrTypeConfig[attrIndex]
		--星级
		local attrXin = EnhanceTable.getRandomIndex( EquipEnhance.refreshConfig.refreshXinReta )
		local values = EquipEnhance.refreshConfig.refreshValue[attrIndex]
		local value = values[attrXin]
		local modulus = EquipEnhance.refreshConfig.refreshModulus[attrIndex]
		randAttrValue[i] = (value*modulus*xilianLevel)/100

		-- 判断是否满属性
		if attrXin == #EquipEnhance.refreshConfig.refreshXinReta then
			nfull = nfull + 1
		end
		-- 触发10星成就
		if attrXin == 10 then
			LActor.SetAchieveProcessByType(sysarg, 84, 1, 1)
		end

		table.remove(attrTypesIndex,rateIndex)
		table.remove(refreshTypeReta,rateIndex)
	end

	--扣材料
	if useItemCount > 0 then
		LActor.removeItem(sysarg, useItemId, useItemCount, -1, -1, -1, "equip_xilian")
	end
	if lockItemCount > 0 then
		LActor.removeItem(sysarg, lockItemId, lockItemCount, -1, -1, -1,"xilian_suoding")
	end

	--扣钱
	if 	money > 0 then
		LActor.changeMoney(sysarg,mtBindCoin,-money, 1, true,  "equip_xilian", "comm_xilian")
	end
	if needYuanbao > 0 then
		LActor.changeMoney(sysarg, mtYuanbao, -needYuanbao, 1, true, "equip_xilian", "xilian_autobuy")
	end

	local logStr = { "", "", "" } -- 记录日志字符串
	local activeCount = Item.getItemProperty(sysarg,itemPtr,Item.ipItemBaptizeActive,0) --激活个数
	--第一次洗练 未激活
	-- if activeCount <= 0 or activeCount > maxLockAttr then
	-- 	activeCount = maxLockAttr
	-- end
	activeCount = maxLockAttr

	print("activeCount==",activeCount)
	local index = 0
	for i=1, activeCount do
		if not lockFlags[i] then	-- 不是锁定的属性
			index = index + 1
			if index > #randAttrType then
				return false, itemPtr
			end
			local attr = randAttrType[index]
			local val = randAttrValue[index]
			Item.setBaptizeProperty( sysarg, itemPtr, i, attr, val )	-- 设置洗炼属性值 -- 多次设置会多次发送，能不能优化下
			logStr[i] = attr..","..val
		end
	end

	local itemid = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_xilian", Item.getItemName(itemid), "", logStr[1], logStr[2], logStr[3], "", "", lfDB)
	-- 屏蔽某些bi的日志
	-- System.logCounter(LActor.getActorId(sysarg), "", "1", "equip_xilian", Item.getItemName(itemid), "")
	-- BI
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip", "", "", "xilian", "putong", tostring(nfull), "", "", lfBI)
	-- else
	-- 	Item.sendBatchBaptize( sysarg, itemPtr, lockFlags[1], lockFlags[2], lockFlags[3], (freeBapt>0) )	--C++实现批量洗炼
	-- end

	--触发成就
	LActor.SetAchieveProcessByType(sysarg, 76, 1, 1)
	--59装备洗练
    activityFunc.onEquipXiLianActivity(sysarg,1)

	--如果还有免费洗炼次数则扣除免费洗炼次数
	-- if freeBapt > 0 then
	-- 	Item.changeFreeBaptize( sysarg, -1 )
	-- end

	return true, itemPtr
end

--确认批量洗炼结果
EnhanceTable[8] = function( sysarg, args )
	--批量洗练屏蔽掉
	if true then
		return false
	end

	local itemPtr = args[2]	--装备的指针
	local index = args[4] --选择的条数
	if itemPtr==nil or index==nil or index<0 or index>=10 then
		--print("confirm batch baptize param error:"..index)
		return false, itemPtr
	end
	--是否装备
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )	--获取物品类型
	if not EnhanceTable.IsEquipType( itemType ) then
		--print( "不是装备类型:"..itemType )
		return false, itemPtr
	end
	--C++端实现确认洗炼功能
	return Item.confirmBatchBaptize( sysarg, itemPtr, index ), itemPtr
end

--洗炼继承
EnhanceTable[9] = function( sysarg, args )
	--洗练继承屏蔽掉 暂时没有这个功能
	if true then
		return false
	end

	local srcPtr = args[2]	--源物品的指针
	local dstPtr = args[3]	--目标物品的指针
	-- 判断装备等级，类型
	if Item.getItemProperty( sysarg, srcPtr, Item.ipItemActorLevel, 0 ) < 40  
		or Item.getItemProperty( sysarg, dstPtr, Item.ipItemActorLevel, 0 ) < 40 then
		--print( "装备等级不足，无法进行洗炼继承" )
		return false, srcPtr, Lang.Enhance.t028
	end
	local srcItemType = Item.getItemProperty( sysarg, srcPtr, Item.ipItemType, 0 )
	local dstItemType = Item.getItemProperty( sysarg, dstPtr, Item.ipItemType, 0 )
	if srcItemType ~= dstItemType then	-- 装备部位是否相同
		return false, srcPtr, Lang.Enhance.t010
	end
	if (not EnhanceTable.IsEquipType( srcItemType )) or ( not EnhanceTable.IsEquipType( dstItemType ) ) then
		--print( "不是装备类型:"..srcItemType.."--"..dstItemType )
		return false, srcPtr, Lang.Enhance.t029
	end
	--判断玩家等级,50级以上
	if LActor.getIntProperty( sysarg, PROP_LEVEL ) < 50 then
		--print("玩家等级不足，无法进行洗炼继承")
		return false, srcPtr, Lang.Enhance.t030
	end
	--判断是否有足够的金钱
	local needMoneyType = EquipEnhance.inheritMoneyType
	local needMoney = EquipEnhance.inheritMoney
	local playerMoney = LActor.getMoneyCount( sysarg, needMoneyType )
	if playerMoney < needMoney then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[needMoneyType+1])
		return false, srcPtr, tipmsg, 1, needMoneyType, needMoney-playerMoney
	end
	-- 扣除金钱
	LActor.changeMoney( sysarg, needMoneyType, -needMoney, 1, true,  "equip", "xilian_jicheng" )

	-- 将绑定物品的洗练属性继承到未绑定的物品上的时候，未绑定物品要变成绑定状态 
	if Item.getItemProperty(sysarg,srcPtr,Item.ipItemBind,0) ~= 0 then
		Item.setItemProperty(sysarg,dstPtr,Item.ipItemBind,1)
	end

	-- 继承洗炼属性
	Item.inheritBaptizeProp(sysarg,srcPtr,dstPtr)
	return true, srcPtr
end

--装备升级（现在的装备进阶）
EnhanceTable[11] = function( sysarg, args )
	if LevelOpenPlaySys.zz_jj_lvl > LActor.getLevel(sysarg ) then
		local tips = string.format( Lang.Enhance.t049, LevelOpenPlaySys.zz_jj_lvl)
		LActor.sendTipmsg( sysarg , tips, ttWarmTip)
		return false
	end
	local itemPtr = args[2]	--装备的指针
	if itemPtr == nil then return false end
	local autobuy = args[4] or 0
	
	-- if args[4] == nil then
	-- 	print("equip update param error")
	-- 	return
	-- end
 --    --add wupeng 使用神佑符bug begin
 --    local nquality = Item.getItemProperty( sysarg, itemPtr, Item.ipItemQuality, 0 )
 --    local actorlevel = Item.getItemProperty( sysarg, itemPtr, Item.ipItemActorLevel, 0 )    
 --    local protected = false
 --    if nquality > 0 and actorlevel >= 40 then
 --       protected = (args[4]==1) --是否使用神佑符
 --    end	
 --    --add wupeng 使用神佑符bug end

		
	local itemType = Item.getItemProperty( sysarg, itemPtr, Item.ipItemType, 0 )	--判断是否装备类型
	if not EnhanceTable.IsEquipType( itemType ) then
		return false, nil, Lang.Enhance.t031
	end

	-- 	config = EquipEnhance.upgrade		
	-- elseif EnhanceTable.IsMountEquip( itemType ) then
	-- 	config = EquipEnhance.mountUpgrade
	-- else
	-- 	return false, nil, Lang.Enhance.t031
	-- end
	--道具id
	local itemId = Item.getItemProperty( sysarg, itemPtr, Item.ipItemID, 0 )	

	-- --是否是套装 目前没有这个要求了
	-- if Item.getItemPropertyById( itemId, Item.ipItemSuitId ) <= 0 then
	-- 	return false, nil, Lang.Enhance.t031
	-- end

	local config = EquipEnhance.upgrade[itemId]
	if config == nil then return false end --配置表为空

	--玩家等级
	local actorlevel = LActor.getLevel( sysarg )

	--装备等级判断
	local itemLevel = Item.getItemPropertyById( itemId, Item.ipItemActorLevel )		--装备使用等级
	if actorlevel < itemLevel then
		local tipmsg = string.format( Lang.Enhance.t033, itemLevel )
		return false, nil, tipmsg
	end

	local newItemId = config.newItems
	if newItemId < 1 then
		return false, nil, Lang.Enhance.t032
	end
	itemLevel = Item.getItemPropertyById( newItemId, Item.ipItemActorLevel )		--新装备使用等级
	if actorlevel < itemLevel then
		local tipmsg = string.format( Lang.Enhance.t033, itemLevel )
		return false, nil, tipmsg
	end

	-- local iLevel = 0		--找到对应的等级配置
	-- for i =1, #config do
	-- 	if config[i].level == itemLevel then
	-- 		iLevel = i
	-- 		break
	-- 	end
	-- end
	-- if iLevel < 1 or iLevel > #config then		--没找到配置
	-- 	return false, nil, Lang.Enhance.t032
	-- end
	-- local levelConfig = config[iLevel]
	-- if levelConfig.checkLevel ~= nil then
	-- 	if LActor.getLevel( sysarg ) < levelConfig.checkLevel then		--需要的人物等级
	-- 		local tipmsg = string.format( Lang.Enhance.t033, levelConfig.checkLevel )
	-- 		return false, nil, tipmsg
	-- 	end
	-- elseif levelConfig.checkLevel ~= nil then	--坐骑等级
	-- 	local mountLevel = LActor.getMountInfo( sysarg )
	-- 	if mountLevel < levelConfig.checkLevel then
	-- 		local tipmsg = string.format( Lang.Enhance.t038, levelConfig.checkLevel )
	-- 		LActor.sendTipmsg( sysarg, tipmsg, ttTipmsgWindow )
	-- 	end
	-- end
	local needMoney = config.money 		--是否有足够的贝币
	local hasbindcoin = LActor.getMoneyCount( sysarg, mtBindCoin )
	if hasbindcoin < needMoney then
		local tipmsg = string.format( Lang.Enhance.t034, needMoney )
		return false, nil, tipmsg, 1, mtBindCoin, needMoney-hasbindcoin
	end
	
	-- local items = levelConfig.items 		--找到物品
	-- local itemIdx = 0
	-- for i=1,#items do
	-- 	if items[i] == itemId then
	-- 		itemIdx = i
	-- 		break
	-- 	end
	-- end
	local needYuanbao  = 0
	local useItemId1 = config.useItems1	-- 是否有足够的升级材料
	local useItemCount1 = config.useCount1
	local haveCount = LActor.getItemCount( sysarg, useItemId1 )
	if  haveCount < useItemCount1 then
		if autobuy == 0 then
			return false, nil, Lang.Enhance.t035, 2, useItemId1, useItemCount1-haveCount
		else
			local goodsId = EnhanceTable.GetShangChengItem(useItemId1)
			local itemPrice = Item.getItemPrice(goodsId)
			if itemPrice <= 0 then
				return false, itemPtr
			end
			needYuanbao = needYuanbao + itemPrice*(useItemCount1-haveCount)
			useItemCount1 = haveCount
		end	
	end

	local useItemId2 = config.useItems2	-- 是否有足够的升级材料
	local useItemCount2 = config.useCount2
	local haveCount = LActor.getItemCount( sysarg, useItemId2 )
	if  haveCount < useItemCount2 then
		if autobuy == 0 then
			return false, nil, Lang.Enhance.t035, 2, useItemId2, useItemCount2-haveCount
		else
			local goodsId = EnhanceTable.GetShangChengItem(useItemId2)
			local itemPrice = Item.getItemPrice(goodsId)
			if itemPrice <= 0 then
				return false, itemPtr
			end
			needYuanbao = needYuanbao + itemPrice*(useItemCount2-haveCount)
			useItemCount2 = haveCount
		end	
	end
	
	local hasyuanbao = LActor.getMoneyCount(sysarg,mtYuanbao)
	if hasyuanbao < needYuanbao  then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[4])
		return false, nil, tipmsg, 1, mtYuanbao, needYuanbao-hasyuanbao
	end
	
	-- local protectItem = EquipEnhance.qualityProtectItem
	-- local protectBind = 1

	-- if protected then -- 检查神佑服
	-- 	if LActor.getItemCount( sysarg, protectItem, 0, 0, 1) < 1 then -- 先检查绑定的
	-- 		if LActor.getItemCount( sysarg, protectItem, 0, 0, 0 ) < 1 then -- 再检查非绑定的
	-- 			local Itemname = Item.getItemName(protectItem)
	-- 			local tips = string.format(Lang.Enhance.q006, Itemname)
	-- 			return false, nil, tips
	-- 		else
	-- 			protectBind = 0
	-- 		end
	-- 	end
	-- end

	--扣除贝币
	LActor.changeMoney( sysarg, mtBindCoin, -needMoney, 1, true,  "equip", "level_up" )
	if needYuanbao > 0 then
		LActor.changeMoney( sysarg, mtYuanbao, -needYuanbao, 1, true,  "equip", "auto_buy" )
	end

	LActor.removeItem( sysarg, useItemId1, useItemCount1, -1, -1, -1,  "equip_up",34)
    LActor.removeItem( sysarg, useItemId2, useItemCount2, -1, -1, -1,  "equip_up",34)

	-- if protected then
	-- 	LActor.removeItem( sysarg, protectItem, 1, -1, -1, protectBind, "", 34 )
	-- end

	--设置物品新的属性，包括ID
	--local newItemId = levelConfig.newItems[itemIdx]
	if not Item.assignStdItem( sysarg, itemPtr, newItemId ) then
		
		return false, nil, Lang.Enhance.t036
	end
	
	--处理掉品质
	-- if not protected then
	-- 	local rates = EquipEnhance.qualityDownRate
	-- 	local nquality = Item.getItemProperty( sysarg, itemPtr, Item.ipItemQuality, 0 )
	-- 	if nquality > 0 and nquality < EnhanceTable.QualityMax and System.getRandomNumber(100) + 1 <= rates[nquality] then
	-- 		Item.setItemProperty( sysarg, itemPtr, Item.ipItemQuality, nquality - 1 )
	-- 		local tips = string.format(Lang.Enhance.q008, Item.getItemName(newItemId), EnhanceTable.QualityName[nquality])
	-- 		LActor.sendTipmsg(sysarg, tips, ttMessage)
	-- 	end
	-- end

	-- 触发成就
	LActor.SetAchieveProcessByType(sysarg, 86, 1, 1)

	--公告
	local isBroadcast = config.broadcast
	if isBroadcast ~= nil and isBroadcast == 1 then
		-- local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		--print(zy)
		local tipmsg = string.format( Lang.Enhance.t037, LActor.getName(sysarg), Item.getColorName(itemId), Item.getColorName(newItemId) )
		System.broadcastTipmsg( tipmsg, ttGmTip )
	end
	--装备进阶
	--报错先屏蔽掉 以后要再加
	--LActor.OnQuestEvent(qtDay, qtEquipAdvance, 1, true, sysarg, false)
	LActor.OnQuestEvent(qtEquipUpFloor, 0, 1, true, sysarg, false) -- 任意装备进阶

	--LActor.onAcTivityEvent(sysarg, 2, newItemId, 0) --开服活动的套装收集监听

	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_shengji", Item.getItemName(newItemId), "", Item.getItemName(itemId), "", "", "", "", lfDB)
	return true, itemPtr

end

-- 装备提品
EnhanceTable[12] = function( sysarg, args )
	--暂时屏蔽提品功能
	if true then
		return
	end
	local nguid = args[1]
	if nguid == nil or nguid < 2 then
		print("quality equip nguid error")
		return
	end
	local pitem = args[2]
	if pitem == nil then
		print("quality equip pitem is nil")
		return
	end

	local autobuy = args[4]

	local itemId = Item.getItemProperty( sysarg, pitem, Item.ipItemID, 0 )

	local itemType = Item.getItemProperty( sysarg, pitem, Item.ipItemType, 0 )	--获取物品类型
	if not EnhanceTable.IsCanStrongType(itemType) then --是否是装备
		return false, nil, Lang.Enhance.q001
	end

	local nquality = Item.getItemProperty( sysarg, pitem, Item.ipItemQuality, 0 ) -- 已经达到最高品质
	if nquality >= (EnhanceTable.QualityMax-1) then
		return false, nil, Lang.Enhance.q002
	end
	if nquality <= 2 then --紫装以下不能提品
		return false, nil, Lang.Enhance.q001
	end


	-- 获取需要的材料
	local needMoneyType = EquipEnhance.qualityMoneyType
	local needItemId = EquipEnhance.qualityUseId[nquality]
	local needMoneyCount = nil
	local needItemCount = nil
	local qualityUseCount = EquipEnhance.qualityUseCount[nquality]
	local qualityUseMoney = EquipEnhance.qualityUseMoney[nquality]
	if qualityUseCount then
		needItemCount = qualityUseCount[itemType]
	end
	if qualityUseMoney then
		needMoneyCount = qualityUseMoney[itemType]
	end
	
	if (not needItemId) or (not needItemCount) or (not qualityUseMoney) then
		return
	end


	-- 材料
	-- local nmat = nguid - 1
	-- local pmat
	-- local mats = {}
	-- local matCount = 0 -- 累计总数
	-- for i=3,nmat + 2 do
	-- 	if Item.getItemProperty( sysarg, args[i], Item.ipItemID, 0 ) ~= needItemId then
	-- 		return false, nil, Lang.Enhance.q007
	-- 	end
	-- 	pmat = {}
	-- 	pmat.ptr = args[i]
	-- 	pmat.count = Item.getItemProperty( sysarg, pmat.ptr, Item.ipItemCount, 0 )
	-- 	matCount = matCount + pmat.count

	-- 	table.insert(mats, pmat)
	-- end

	-- 材料
	local useItemCount = LActor.getItemCount(sysarg,needItemId)
	local needYuanbao = 0
	if useItemCount < needItemCount then
		if autobuy == 0 then
			local tips = string.format(Lang.Enhance.q004, Item.getItemName(needItemId))
			--LActor.sendTipmsg(sysarg, tips, ttMessage) 
			LActor.SendGeneralTips(sysarg, 2, needItemId, needItemCount-useItemCount)
			return false
		end
		local goodsId = EnhanceTable.GetShangChengItem(needItemId)
		local itemPrice = Item.getItemPrice(goodsId)
		if itemPrice <= 0 then
			return false, itemPtr
		end
		needYuanbao = needYuanbao + itemPrice*(needItemCount-useItemCount)
	else
		useItemCount = needItemCount
	end
	
	local hasmoney = LActor.getMoneyCount(sysarg, needMoneyType)
	if hasmoney < needMoneyCount then
		return false, nil, Lang.Enhance.q003, 1, needMoneyType, needMoneyCount-hasmoney
	end
	local hasyuanbao = LActor.getMoneyCount(sysarg,mtYuanbao)
	if hasyuanbao < needYuanbao  then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[4])
		return false, nil, tipmsg, 1, mtYuanbao, needYuanbao-hasyuanbao
	end

	-- 扣材料
	-- local removeLeft = needItemCount
	-- for i=1,#mats do
	-- 	if removeLeft <= 0 then -- 全部扣完
	-- 		break
	-- 	end
	-- 	pmat = mats[i]
	-- 	local removeCnt = removeLeft
	-- 	if removeCnt > pmat.count then
	-- 		removeCnt = pmat.count
	-- 	end
	-- 	LActor.removeItemByPtr(sysarg, pmat.ptr, removeCnt, true, "", 307)
	-- 	removeLeft = removeLeft - removeCnt
	-- end
	LActor.removeItem(sysarg, needItemId, useItemCount, -1, -1, -1, "equip_tipin")

	LActor.changeMoney( sysarg, needMoneyType, -needMoneyCount, 1, true, "equip", "quality")
	LActor.changeMoney( sysarg, mtYuanbao, -needYuanbao, 1, true, "equip", "quality_autobuy")

	local newQuality = nquality + 1

	Item.setItemProperty(sysarg, pitem, Item.ipItemQuality, newQuality)

	-- 公告
	--if EquipEnhance.qualityBroadcast[idx] == 1 then
		-- local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		local itenName = Item.getColorName(itemId)
		local tipmsg = string.format( Lang.Enhance.q005, LActor.getName(sysarg), itenName, EnhanceTable.QualityName[newQuality+1], itenName )
		--System.broadcastTipmsg( tipmsg, ttScreenCenter )
	--end

	-- BI
	local pzname = { "yx", "jl", "wm", "ss" }
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip", "", "", "tipin", pzname[newQuality], "", "", "", lfBI)
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip_tipin", Item.getItemName(itemId), "", pzname[newQuality], "", "", "", "", lfDB)

	return true, itemPtr
end

-- 装备进阶(现在的装备神铸)
EnhanceTable[13] = function( sysarg, args )
	
	if LevelOpenPlaySys.zb_sz_lvl > LActor.getLevel( sysarg ) then
		local tips = string.format( Lang.Enhance.t051, LevelOpenPlaySys.zb_sz_lvl)
		LActor.sendTipmsg( sysarg , tips, ttWarmTip)
		return
	end

	local nguid = args[1]
	if nguid == nil or nguid < 1 then
		print("quality equip nguid error")
		return
	end
	local pitem = args[2]
	if pitem == nil then
		print("quality equip pitem is nil")
		return
	end

	local autobuy = args[4] or 0

	local itemId = Item.getItemProperty( sysarg, pitem, Item.ipItemID, 0 )

	--获取颜色判断
	
	-- if Item.isMaxStage(itemId) and Item.getItemProperty(sysarg, pitem, Item.ipItemQuality, 0) < 3 then
	-- 	LActor.sendTipmsg(sysarg, Lang.Enhance.s007, ttMessage)
	-- 	return 
	-- end

	-- 判断装备能否进阶
	local config = EquipEnhance.shenzhuConfig[itemId]
	if not config then
		LActor.sendTipmsg(sysarg, Lang.Enhance.s001, ttMessage)
		return
	end

	-- 获取需要的材料
	local needMoneyType = mtBindCoin
	local needItemId = config.useItems
	local needItemCount = config.useCount
	local needMoneyCount = config.money
	local needYuanbao = 0
	-- 材料
	local haveCount = LActor.getItemCount( sysarg, needItemId )
	if  haveCount < needItemCount then
		if autobuy == 0 then
			local tips = string.format(Lang.Enhance.s003, Item.getItemName(needItemId))
			--LActor.sendTipmsg(sysarg, tips, ttMessage) 
			LActor.SendGeneralTips(sysarg, 2, needItemId, needItemCount-haveCount)
			return 
		else
			local goodsId = EnhanceTable.GetShangChengItem(needItemId)
			local itemPrice = Item.getItemPrice(goodsId)
			if itemPrice <= 0 then
				return false, pitem
			end
			needYuanbao = needYuanbao + itemPrice*(needItemId-haveCount)
			needItemCount = haveCount
		end	
	end
	
	local hasyuanbao = LActor.getMoneyCount(sysarg,mtYuanbao)
	if hasyuanbao < needYuanbao  then
		local tipmsg = string.format(Lang.Enhance.t018,MoneyName[4])
		return false, nil, tipmsg, 1, mtYuanbao, needYuanbao-hasyuanbao
	end

	--铜钱
	local hasmoney = LActor.getMoneyCount(sysarg, needMoneyType)
	if hasmoney < needMoneyCount then
		LActor.SendGeneralTips(sysarg, 1, needMoneyType, needMoneyCount-hasmoney)
		--LActor.sendTipmsg(sysarg, Lang.Enhance.s002, ttMessage)
		return 
	end

	-- 扣材料
	if needItemCount > 0 then
		LActor.removeItem( sysarg, needItemId, needItemCount, -1, -1, -1,  "equip_shenzhu")
	end

	LActor.changeMoney( sysarg, needMoneyType, -needMoneyCount, 1, true, "equip", "shenzhu")

	if needYuanbao > 0 then
		LActor.changeMoney( sysarg, mtYuanbao, -needYuanbao, 1, true,  "shenzhu", "auto_buy" )
	end

	--设置物品新的属性，包括ID
	local newItemId = config.newItems
	if not Item.assignStdItem( sysarg, pitem, newItemId ) then
		return false, nil, Lang.Enhance.s004
	end

	-- 公告
	if config.broadcast and config.broadcast == 1 then
		-- local zy = LActor.getIntProperty(sysarg,PROP_CAMP)
		local tipmsg = string.format( Lang.Enhance.s005, LActor.getName(sysarg), 
			Item.getColorName(itemId), Item.getColorName(newItemId) )
		System.broadcastTipmsg( tipmsg, ttGmTip )
	end
	local newitemPtr =  Item.getItemById(sysarg, newItemId,  0)
	local itemType = Item.getItemProperty( sysarg, newitemPtr, Item.ipItemType, 0 )	--获取物品类型
	local hongbaoid = EnhanceTable.shenzhuHB[itemType]
	print("=========>>>>>>>神铸的等级"..Item.getColor(newItemId),itemType)
	if Item.getColor(newItemId) == 5 then
		if hongbaoid ~= nil then
			print("=============>>>>>神铸红包"..hongbaoid)
			qianghongbao.SystemHB(sysarg, hongbaoid, 0)
		end
	end

	-- BI
	--报错 先屏蔽
	--LActor.OnQuestEvent(qtDay, qtEquipUpLevel, 1, true, sysarg, false)
	System.logCounter(LActor.getActorId(sysarg), LActor.getAccountName(sysarg), tostring(LActor.getLevel(sysarg)), "equip", tostring(LActor.getIntProperty(sysarg, PROP_ACTOR_FIGHT_VALUE)), "", "shengjie", "", "", "", "", lfBI)

	return true, pitem
end

EnhanceTable.isFashionType = function( sysarg, itemPtr)
	if itemPtr == nil then return nil end
	return Item.getItemProperty(sysarg, itemPtr, Item.ipItemType, 0) == Item.itFashionDress
end

EnhanceTable.isFashionSameColor = function (sysarg, itemPtr1, itemPtr2)
	local itemId1 = Item.getItemProperty(sysarg, itemPtr1, Item.ipItemID, 0)
	local itemId2 = Item.getItemProperty(sysarg, itemPtr2, Item.ipItemID, 0)
	if itemId1 == 0 or itemId2 == 0 then print("item id = 0") return false end
	return Item.getColor(itemId1) == Item.getColor(itemId2)
end

EnhanceTable.getFashionValue = function( sysarg, itemPtr )
	if itemPtr == nil then return nil end
	return Item.getItemProperty(sysarg, itemPtr, Item.ipItemFashionColor, 0)
end

-- EnhanceTable.getfashionColorStageConf = function()
-- 	return EquipEnhance.fashionColorStage
-- end

EnhanceTable.getFashionColorAtrriRate = function()
	return EquipEnhance.fashionColorAtrriRate
end

-- EnhanceTable.getFashionStage = function( )
-- 	local fashionColorStageConf = EnhanceTable.getfashionColorStageConf()

-- 	for i=1, #fashionColorStageConf do
-- 		if fashionColorValue < fashionColorStageConf[i] then
-- 			return i - 1
-- 		end
-- 	end
-- 	return #fashionColorStageConf
-- end

EnhanceTable.broadcastFashionColor = function( sysarg, fashionColorValue, colorValueMian, itemPtr)
	local stage
	local score = 0
	print("fashionColorValue "..fashionColorValue.." colorValueMian: "..colorValueMian)
	for i= 1, (fashionColorValue - colorValueMian)do
		score = fashionColorValue - i + 1
		stage = EquipEnhance.fashionColorBroadcast[score]
		--print("stage "..stage.." score: "..score)
		if stage and stage > 0 then
			break
		end
	end
	if  stage and stage > 0 then
		local name = LActor.getName(sysarg)
		local itemId = Item.getItemProperty(sysarg, itemPtr, Item.ipItemID, 0)
		local equipname = Item.getColorName(itemId)
		local str = string.format(Lang.Enhance.fs001, name, equipname, stage)
		--System.broadcastTipmsg(str,ttScreenCenter)
		--System.broadcastTipmsg(str..Lang.Enhance.fs002,ttHearsay)
	end
end

EnhanceTable.checkFashionIsTime = function( sysarg, itemPtr )
	return Item.getItemProperty(sysarg, itemPtr, Item.ipItemExpiredTime, 0) ~= 0
end

function fashColorTest(sysarg, itemId, value,bind )
	--local arg = {}
	if itemId == nil then print("111111111") return end
	itemId = tonumber(itemId)
	value = value or 1
	bind = bind or 0
	bind = tonumber(bind)
	local itemPtr =  Item.getItemById(sysarg, itemId,  bind)
	if itemPtr == nil then print("can not find item.....") return end
	Item.setItemProperty(sysarg, itemPtr, Item.ipItemFashionColor, value)
	print("set "..itemId.." "..value.." "..bind)
 	--EnhanceTable[25](sysarg, arg)
 end 


--时装的炫彩值合成
EnhanceTable[25] = function( sysarg, args )
    if LActor.isActorSystemOpen(sysarg, siFashionDeal) ~= true then
    	if(LActor.getLevel(sysarg) < 40) then
    		print(" shizhuang not open cause the level is low")
    		return
    	else
    		LActor.openActorSystem(pChar, siFashionDeal)
    	end
    end
	local nguid = args[1] --物品个数
	if nguid ~= 2 then print(" nguid: "..nguid) return false end

	local itemPtr = args[2] 
	local itemPtrSub = args[3]

	if EnhanceTable.isFashionType(sysarg, itemPtr) ~= true or EnhanceTable.isFashionType(sysarg, itemPtrSub) ~= true then
		print(" not fashion!!!!")
		return false, nil, "not all fashion"
	end

	if itemPtr == itemPtrSub then
		print("itemPtr == itemPtrSub")
		return
	end

	if EnhanceTable.isFashionSameColor(sysarg, itemPtr, itemPtrSub) ~= true then
		print(" not the same color fashion")
		return false, nil, " not the same color"
	end

	if EnhanceTable.checkFashionIsTime(sysarg, itemPtr) == true or EnhanceTable.checkFashionIsTime(sysarg, itemPtrSub) == true then
		print("there may be time fashion")
		return false, nil, "there may be time fashion"
	end

	local FashionColorAtrriRate = EnhanceTable.getFashionColorAtrriRate()
    local maxColorNum = #FashionColorAtrriRate
	local colorValueMian = EnhanceTable.getFashionValue(sysarg, itemPtr) or -1
	--print("maxColorNum: "..maxColorNum.." colorValueMian: "..colorValueMian)
	if (colorValueMian + 1) >= maxColorNum then
		print("colorValueMian >= maxColorNum")
        return false, nil, "reach max value"
	elseif colorValueMian < 0 then
		print("colorValueMian < 0")
		return false
	end
	local colorValueSub = EnhanceTable.getFashionValue(sysarg, itemPtrSub)
	if colorValueSub == nil then print("colorValueSub == nil") return false end

	if Item.getItemProperty(sysarg,itemPtrSub,Item.ipItemBind,0) ~= 0 then	-- 如果被合的时装是绑定的则主时装也为绑定状态
		Item.setItemProperty(sysarg,itemPtr,Item.ipItemBind,1)
	end
	LActor.removeItemByPtr(sysarg, itemPtrSub, 1, true, "fashion_color", 19)

	local colorValueTotal =   colorValueMian + 1 + colorValueSub

	if colorValueTotal >= (maxColorNum - 1) then colorValueTotal = (maxColorNum - 1) end

	--print("colorValueTotal: "..colorValueTotal)
	Item.setItemProperty(sysarg, itemPtr, Item.ipItemFashionColor, colorValueTotal)

	EnhanceTable.broadcastFashionColor(sysarg, colorValueTotal + 1, colorValueMian + 1, itemPtr)
	--print("fashion succ")
  	return true, itemPtr
end

--玩家开始处理装备,  [物品指针数量,指针1,指针2,..物品处理类型,参数1，参数2,...]
EventCallDispatcher.handlerEquipEnhance = function ( sysarg, args )
	if args == nil then
		return false
	end
	local ptrCount = args[1]
	local enhanceType = args[ptrCount + 2]
	-- print( "--装备操作 类型:"..enhanceType )
	local func = EnhanceTable[enhanceType]
	if func == nil then
		return false
	end
	-- print(func)
	local isSuccess, itemPtr, str, gen_type, gen_id, gen_count = func( sysarg, args )
	if isSuccess == nil then
		isSuccess = false -- 默认是失败
	end
	--Item.sendItemProcessResult( sysarg, itemPtr, enhanceType, isSuccess, str )	--发送处理结果
	if gen_type and gen_id and gen_count then
		LActor.SendGeneralTips(sysarg, gen_type, gen_id, gen_count)
		-- 有通用提示就不用发str
		str = ""
	end
	Item.sendItemProcessResult( sysarg, itemPtr, enhanceType, isSuccess, str )	--发送处理结果

	return true
end

EventCallDispatcher.registerEventCall(BaseTypes.ActorEventId.aeItemProcess, EventCallDispatcher.handlerEquipEnhance)

--测试装备增强
testEnhance = function( sysarg, nType )
	local itemInEquip = false
	local itemPtr, itemInEquip = Item.getItemByType( sysarg, nType, true, itemInEquip )
	if itemPtr == nil then return end

	local args = { nil, itemPtr }
	EnhanceTable[11]( sysarg, args )
end


--返回是否还可以强化装备
function EnhanceTable.leftCount(sysarg)
	if LevelOpenPlaySys.bs_xq_lvl > LActor.getLevel( sysarg ) then return 0 end

	if LActor.isAllEquipStrong(sysarg, EnhanceTable.StrongMax) then return 0 end

	return 1
end
GetQuestTargetCount.register(qtEquipStrength, EnhanceTable.leftCount)


